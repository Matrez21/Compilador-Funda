Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     statement -> FUNC ID LPAREN param_list RPAREN block
Rule 2     expression -> ID LPAREN expression_list RPAREN
Rule 3     statement -> RETURN expression SEMICOLON
Rule 4     param_list -> param_list COMMA ID
Rule 5     param_list -> ID
Rule 6     param_list -> empty
Rule 7     program -> statement_list
Rule 8     statement_list -> statement_list statement
Rule 9     statement_list -> statement
Rule 10    statement -> statement_function
Rule 11    statement -> statement_return
Rule 12    statement -> statement_print
Rule 13    statement -> statement_assign
Rule 14    statement -> statement_if
Rule 15    statement -> statement_while
Rule 16    statement -> statement_for
Rule 17    statement -> statement_append
Rule 18    statement -> block
Rule 19    statement_function -> FUNC ID LPAREN param_list RPAREN block
Rule 20    statement_return -> RETURN expression SEMICOLON
Rule 21    statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON
Rule 22    statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
Rule 23    expression_list -> expression_list COMMA expression
Rule 24    expression_list -> expression
Rule 25    expression -> LSQUARE expression_list RSQUARE
Rule 26    expression -> LBRACE RBRACE
Rule 27    statement_assign -> ID EQUALS expression SEMICOLON
Rule 28    assign_expression -> ID EQUALS expression
Rule 29    assign_expression_opt -> assign_expression
Rule 30    assign_expression_opt -> empty
Rule 31    expression_opt -> expression
Rule 32    expression_opt -> empty
Rule 33    empty -> <empty>
Rule 34    statement_if -> IF LPAREN expression RPAREN statement
Rule 35    statement_if -> IF LPAREN expression RPAREN statement ELSE statement
Rule 36    statement_while -> WHILE LPAREN expression RPAREN statement
Rule 37    statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
Rule 38    block -> LBRACE statement_list RBRACE
Rule 39    expression -> expression PLUS expression
Rule 40    expression -> expression MINUS expression
Rule 41    expression -> expression TIMES expression
Rule 42    expression -> expression DIVIDE expression
Rule 43    expression -> expression LESS expression
Rule 44    expression -> expression GREATER expression
Rule 45    expression -> expression AND expression
Rule 46    expression -> expression OR expression
Rule 47    expression -> NOT expression
Rule 48    expression -> LPAREN expression RPAREN
Rule 49    expression -> NUMBER
Rule 50    expression -> STRING
Rule 51    expression -> ID

Terminals, with rules where they appear

AND                  : 45
APPEND               : 22
COMMA                : 4 23
DIVIDE               : 42
ELSE                 : 35
EQUALS               : 27 28
FOR                  : 37
FUNC                 : 1 19
GREATER              : 44
ID                   : 1 2 4 5 19 22 27 28 51
IF                   : 34 35
LBRACE               : 26 38
LESS                 : 43
LPAREN               : 1 2 19 21 22 34 35 36 37 48
LSQUARE              : 25
MINUS                : 40
NOT                  : 47
NUMBER               : 49
OR                   : 46
PERIOD               : 22
PLUS                 : 39
PRINT                : 21
RBRACE               : 26 38
RETURN               : 3 20
RPAREN               : 1 2 19 21 22 34 35 36 37 48
RSQUARE              : 25
SEMICOLON            : 3 20 21 22 27 37 37
STRING               : 50
TIMES                : 41
WHILE                : 36
error                : 

Nonterminals, with rules where they appear

assign_expression    : 29
assign_expression_opt : 37 37
block                : 1 18 19
empty                : 6 30 32
expression           : 3 20 22 23 24 27 28 31 34 35 36 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 48
expression_list      : 2 21 23 25
expression_opt       : 37
param_list           : 1 4 19
program              : 0
statement            : 8 9 34 35 35 36 37
statement_append     : 17
statement_assign     : 13
statement_for        : 16
statement_function   : 10
statement_if         : 14
statement_list       : 7 8 38
statement_print      : 12
statement_return     : 11
statement_while      : 15

Parsing method: LALR

state 0

    (0) S' -> . program
    (7) program -> . statement_list
    (8) statement_list -> . statement_list statement
    (9) statement_list -> . statement
    (1) statement -> . FUNC ID LPAREN param_list RPAREN block
    (3) statement -> . RETURN expression SEMICOLON
    (10) statement -> . statement_function
    (11) statement -> . statement_return
    (12) statement -> . statement_print
    (13) statement -> . statement_assign
    (14) statement -> . statement_if
    (15) statement -> . statement_while
    (16) statement -> . statement_for
    (17) statement -> . statement_append
    (18) statement -> . block
    (19) statement_function -> . FUNC ID LPAREN param_list RPAREN block
    (20) statement_return -> . RETURN expression SEMICOLON
    (21) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (27) statement_assign -> . ID EQUALS expression SEMICOLON
    (34) statement_if -> . IF LPAREN expression RPAREN statement
    (35) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) statement_while -> . WHILE LPAREN expression RPAREN statement
    (37) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (22) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (38) block -> . LBRACE statement_list RBRACE

    FUNC            shift and go to state 4
    RETURN          shift and go to state 7
    PRINT           shift and go to state 16
    ID              shift and go to state 5
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    LBRACE          shift and go to state 20

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    block                          shift and go to state 6
    statement_function             shift and go to state 8
    statement_return               shift and go to state 9
    statement_print                shift and go to state 10
    statement_assign               shift and go to state 11
    statement_if                   shift and go to state 12
    statement_while                shift and go to state 13
    statement_for                  shift and go to state 14
    statement_append               shift and go to state 15

state 1

    (0) S' -> program .



state 2

    (7) program -> statement_list .
    (8) statement_list -> statement_list . statement
    (1) statement -> . FUNC ID LPAREN param_list RPAREN block
    (3) statement -> . RETURN expression SEMICOLON
    (10) statement -> . statement_function
    (11) statement -> . statement_return
    (12) statement -> . statement_print
    (13) statement -> . statement_assign
    (14) statement -> . statement_if
    (15) statement -> . statement_while
    (16) statement -> . statement_for
    (17) statement -> . statement_append
    (18) statement -> . block
    (19) statement_function -> . FUNC ID LPAREN param_list RPAREN block
    (20) statement_return -> . RETURN expression SEMICOLON
    (21) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (27) statement_assign -> . ID EQUALS expression SEMICOLON
    (34) statement_if -> . IF LPAREN expression RPAREN statement
    (35) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) statement_while -> . WHILE LPAREN expression RPAREN statement
    (37) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (22) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (38) block -> . LBRACE statement_list RBRACE

    $end            reduce using rule 7 (program -> statement_list .)
    FUNC            shift and go to state 4
    RETURN          shift and go to state 7
    PRINT           shift and go to state 16
    ID              shift and go to state 5
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    LBRACE          shift and go to state 20

    statement                      shift and go to state 21
    block                          shift and go to state 6
    statement_function             shift and go to state 8
    statement_return               shift and go to state 9
    statement_print                shift and go to state 10
    statement_assign               shift and go to state 11
    statement_if                   shift and go to state 12
    statement_while                shift and go to state 13
    statement_for                  shift and go to state 14
    statement_append               shift and go to state 15

state 3

    (9) statement_list -> statement .

    FUNC            reduce using rule 9 (statement_list -> statement .)
    RETURN          reduce using rule 9 (statement_list -> statement .)
    PRINT           reduce using rule 9 (statement_list -> statement .)
    ID              reduce using rule 9 (statement_list -> statement .)
    IF              reduce using rule 9 (statement_list -> statement .)
    WHILE           reduce using rule 9 (statement_list -> statement .)
    FOR             reduce using rule 9 (statement_list -> statement .)
    LBRACE          reduce using rule 9 (statement_list -> statement .)
    $end            reduce using rule 9 (statement_list -> statement .)
    RBRACE          reduce using rule 9 (statement_list -> statement .)


state 4

    (1) statement -> FUNC . ID LPAREN param_list RPAREN block
    (19) statement_function -> FUNC . ID LPAREN param_list RPAREN block

    ID              shift and go to state 22


state 5

    (27) statement_assign -> ID . EQUALS expression SEMICOLON
    (22) statement_append -> ID . PERIOD APPEND LPAREN expression RPAREN SEMICOLON

    EQUALS          shift and go to state 23
    PERIOD          shift and go to state 24


state 6

    (18) statement -> block .

    FUNC            reduce using rule 18 (statement -> block .)
    RETURN          reduce using rule 18 (statement -> block .)
    PRINT           reduce using rule 18 (statement -> block .)
    ID              reduce using rule 18 (statement -> block .)
    IF              reduce using rule 18 (statement -> block .)
    WHILE           reduce using rule 18 (statement -> block .)
    FOR             reduce using rule 18 (statement -> block .)
    LBRACE          reduce using rule 18 (statement -> block .)
    $end            reduce using rule 18 (statement -> block .)
    RBRACE          reduce using rule 18 (statement -> block .)
    ELSE            reduce using rule 18 (statement -> block .)


state 7

    (3) statement -> RETURN . expression SEMICOLON
    (20) statement_return -> RETURN . expression SEMICOLON
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 25

state 8

    (10) statement -> statement_function .

    FUNC            reduce using rule 10 (statement -> statement_function .)
    RETURN          reduce using rule 10 (statement -> statement_function .)
    PRINT           reduce using rule 10 (statement -> statement_function .)
    ID              reduce using rule 10 (statement -> statement_function .)
    IF              reduce using rule 10 (statement -> statement_function .)
    WHILE           reduce using rule 10 (statement -> statement_function .)
    FOR             reduce using rule 10 (statement -> statement_function .)
    LBRACE          reduce using rule 10 (statement -> statement_function .)
    $end            reduce using rule 10 (statement -> statement_function .)
    RBRACE          reduce using rule 10 (statement -> statement_function .)
    ELSE            reduce using rule 10 (statement -> statement_function .)


state 9

    (11) statement -> statement_return .

    FUNC            reduce using rule 11 (statement -> statement_return .)
    RETURN          reduce using rule 11 (statement -> statement_return .)
    PRINT           reduce using rule 11 (statement -> statement_return .)
    ID              reduce using rule 11 (statement -> statement_return .)
    IF              reduce using rule 11 (statement -> statement_return .)
    WHILE           reduce using rule 11 (statement -> statement_return .)
    FOR             reduce using rule 11 (statement -> statement_return .)
    LBRACE          reduce using rule 11 (statement -> statement_return .)
    $end            reduce using rule 11 (statement -> statement_return .)
    RBRACE          reduce using rule 11 (statement -> statement_return .)
    ELSE            reduce using rule 11 (statement -> statement_return .)


state 10

    (12) statement -> statement_print .

    FUNC            reduce using rule 12 (statement -> statement_print .)
    RETURN          reduce using rule 12 (statement -> statement_print .)
    PRINT           reduce using rule 12 (statement -> statement_print .)
    ID              reduce using rule 12 (statement -> statement_print .)
    IF              reduce using rule 12 (statement -> statement_print .)
    WHILE           reduce using rule 12 (statement -> statement_print .)
    FOR             reduce using rule 12 (statement -> statement_print .)
    LBRACE          reduce using rule 12 (statement -> statement_print .)
    $end            reduce using rule 12 (statement -> statement_print .)
    RBRACE          reduce using rule 12 (statement -> statement_print .)
    ELSE            reduce using rule 12 (statement -> statement_print .)


state 11

    (13) statement -> statement_assign .

    FUNC            reduce using rule 13 (statement -> statement_assign .)
    RETURN          reduce using rule 13 (statement -> statement_assign .)
    PRINT           reduce using rule 13 (statement -> statement_assign .)
    ID              reduce using rule 13 (statement -> statement_assign .)
    IF              reduce using rule 13 (statement -> statement_assign .)
    WHILE           reduce using rule 13 (statement -> statement_assign .)
    FOR             reduce using rule 13 (statement -> statement_assign .)
    LBRACE          reduce using rule 13 (statement -> statement_assign .)
    $end            reduce using rule 13 (statement -> statement_assign .)
    RBRACE          reduce using rule 13 (statement -> statement_assign .)
    ELSE            reduce using rule 13 (statement -> statement_assign .)


state 12

    (14) statement -> statement_if .

    FUNC            reduce using rule 14 (statement -> statement_if .)
    RETURN          reduce using rule 14 (statement -> statement_if .)
    PRINT           reduce using rule 14 (statement -> statement_if .)
    ID              reduce using rule 14 (statement -> statement_if .)
    IF              reduce using rule 14 (statement -> statement_if .)
    WHILE           reduce using rule 14 (statement -> statement_if .)
    FOR             reduce using rule 14 (statement -> statement_if .)
    LBRACE          reduce using rule 14 (statement -> statement_if .)
    $end            reduce using rule 14 (statement -> statement_if .)
    RBRACE          reduce using rule 14 (statement -> statement_if .)
    ELSE            reduce using rule 14 (statement -> statement_if .)


state 13

    (15) statement -> statement_while .

    FUNC            reduce using rule 15 (statement -> statement_while .)
    RETURN          reduce using rule 15 (statement -> statement_while .)
    PRINT           reduce using rule 15 (statement -> statement_while .)
    ID              reduce using rule 15 (statement -> statement_while .)
    IF              reduce using rule 15 (statement -> statement_while .)
    WHILE           reduce using rule 15 (statement -> statement_while .)
    FOR             reduce using rule 15 (statement -> statement_while .)
    LBRACE          reduce using rule 15 (statement -> statement_while .)
    $end            reduce using rule 15 (statement -> statement_while .)
    RBRACE          reduce using rule 15 (statement -> statement_while .)
    ELSE            reduce using rule 15 (statement -> statement_while .)


state 14

    (16) statement -> statement_for .

    FUNC            reduce using rule 16 (statement -> statement_for .)
    RETURN          reduce using rule 16 (statement -> statement_for .)
    PRINT           reduce using rule 16 (statement -> statement_for .)
    ID              reduce using rule 16 (statement -> statement_for .)
    IF              reduce using rule 16 (statement -> statement_for .)
    WHILE           reduce using rule 16 (statement -> statement_for .)
    FOR             reduce using rule 16 (statement -> statement_for .)
    LBRACE          reduce using rule 16 (statement -> statement_for .)
    $end            reduce using rule 16 (statement -> statement_for .)
    RBRACE          reduce using rule 16 (statement -> statement_for .)
    ELSE            reduce using rule 16 (statement -> statement_for .)


state 15

    (17) statement -> statement_append .

    FUNC            reduce using rule 17 (statement -> statement_append .)
    RETURN          reduce using rule 17 (statement -> statement_append .)
    PRINT           reduce using rule 17 (statement -> statement_append .)
    ID              reduce using rule 17 (statement -> statement_append .)
    IF              reduce using rule 17 (statement -> statement_append .)
    WHILE           reduce using rule 17 (statement -> statement_append .)
    FOR             reduce using rule 17 (statement -> statement_append .)
    LBRACE          reduce using rule 17 (statement -> statement_append .)
    $end            reduce using rule 17 (statement -> statement_append .)
    RBRACE          reduce using rule 17 (statement -> statement_append .)
    ELSE            reduce using rule 17 (statement -> statement_append .)


state 16

    (21) statement_print -> PRINT . LPAREN expression_list RPAREN SEMICOLON

    LPAREN          shift and go to state 33


state 17

    (34) statement_if -> IF . LPAREN expression RPAREN statement
    (35) statement_if -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 34


state 18

    (36) statement_while -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 35


state 19

    (37) statement_for -> FOR . LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement

    LPAREN          shift and go to state 36


state 20

    (38) block -> LBRACE . statement_list RBRACE
    (8) statement_list -> . statement_list statement
    (9) statement_list -> . statement
    (1) statement -> . FUNC ID LPAREN param_list RPAREN block
    (3) statement -> . RETURN expression SEMICOLON
    (10) statement -> . statement_function
    (11) statement -> . statement_return
    (12) statement -> . statement_print
    (13) statement -> . statement_assign
    (14) statement -> . statement_if
    (15) statement -> . statement_while
    (16) statement -> . statement_for
    (17) statement -> . statement_append
    (18) statement -> . block
    (19) statement_function -> . FUNC ID LPAREN param_list RPAREN block
    (20) statement_return -> . RETURN expression SEMICOLON
    (21) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (27) statement_assign -> . ID EQUALS expression SEMICOLON
    (34) statement_if -> . IF LPAREN expression RPAREN statement
    (35) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) statement_while -> . WHILE LPAREN expression RPAREN statement
    (37) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (22) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (38) block -> . LBRACE statement_list RBRACE

    FUNC            shift and go to state 4
    RETURN          shift and go to state 7
    PRINT           shift and go to state 16
    ID              shift and go to state 5
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    LBRACE          shift and go to state 20

    statement_list                 shift and go to state 37
    statement                      shift and go to state 3
    block                          shift and go to state 6
    statement_function             shift and go to state 8
    statement_return               shift and go to state 9
    statement_print                shift and go to state 10
    statement_assign               shift and go to state 11
    statement_if                   shift and go to state 12
    statement_while                shift and go to state 13
    statement_for                  shift and go to state 14
    statement_append               shift and go to state 15

state 21

    (8) statement_list -> statement_list statement .

    FUNC            reduce using rule 8 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 8 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 8 (statement_list -> statement_list statement .)
    ID              reduce using rule 8 (statement_list -> statement_list statement .)
    IF              reduce using rule 8 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 8 (statement_list -> statement_list statement .)
    FOR             reduce using rule 8 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 8 (statement_list -> statement_list statement .)
    $end            reduce using rule 8 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 8 (statement_list -> statement_list statement .)


state 22

    (1) statement -> FUNC ID . LPAREN param_list RPAREN block
    (19) statement_function -> FUNC ID . LPAREN param_list RPAREN block

    LPAREN          shift and go to state 38


state 23

    (27) statement_assign -> ID EQUALS . expression SEMICOLON
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 39

state 24

    (22) statement_append -> ID PERIOD . APPEND LPAREN expression RPAREN SEMICOLON

    APPEND          shift and go to state 40


state 25

    (3) statement -> RETURN expression . SEMICOLON
    (20) statement_return -> RETURN expression . SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    SEMICOLON       shift and go to state 41
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49


state 26

    (2) expression -> ID . LPAREN expression_list RPAREN
    (51) expression -> ID .

    LPAREN          shift and go to state 50
    SEMICOLON       reduce using rule 51 (expression -> ID .)
    PLUS            reduce using rule 51 (expression -> ID .)
    MINUS           reduce using rule 51 (expression -> ID .)
    TIMES           reduce using rule 51 (expression -> ID .)
    DIVIDE          reduce using rule 51 (expression -> ID .)
    LESS            reduce using rule 51 (expression -> ID .)
    GREATER         reduce using rule 51 (expression -> ID .)
    AND             reduce using rule 51 (expression -> ID .)
    OR              reduce using rule 51 (expression -> ID .)
    RPAREN          reduce using rule 51 (expression -> ID .)
    RSQUARE         reduce using rule 51 (expression -> ID .)
    COMMA           reduce using rule 51 (expression -> ID .)


state 27

    (48) expression -> LPAREN . expression RPAREN
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 51

state 28

    (25) expression -> LSQUARE . expression_list RSQUARE
    (23) expression_list -> . expression_list COMMA expression
    (24) expression_list -> . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression_list                shift and go to state 52
    expression                     shift and go to state 53

state 29

    (26) expression -> LBRACE . RBRACE

    RBRACE          shift and go to state 54


state 30

    (47) expression -> NOT . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 55

state 31

    (49) expression -> NUMBER .

    SEMICOLON       reduce using rule 49 (expression -> NUMBER .)
    PLUS            reduce using rule 49 (expression -> NUMBER .)
    MINUS           reduce using rule 49 (expression -> NUMBER .)
    TIMES           reduce using rule 49 (expression -> NUMBER .)
    DIVIDE          reduce using rule 49 (expression -> NUMBER .)
    LESS            reduce using rule 49 (expression -> NUMBER .)
    GREATER         reduce using rule 49 (expression -> NUMBER .)
    AND             reduce using rule 49 (expression -> NUMBER .)
    OR              reduce using rule 49 (expression -> NUMBER .)
    RPAREN          reduce using rule 49 (expression -> NUMBER .)
    RSQUARE         reduce using rule 49 (expression -> NUMBER .)
    COMMA           reduce using rule 49 (expression -> NUMBER .)


state 32

    (50) expression -> STRING .

    SEMICOLON       reduce using rule 50 (expression -> STRING .)
    PLUS            reduce using rule 50 (expression -> STRING .)
    MINUS           reduce using rule 50 (expression -> STRING .)
    TIMES           reduce using rule 50 (expression -> STRING .)
    DIVIDE          reduce using rule 50 (expression -> STRING .)
    LESS            reduce using rule 50 (expression -> STRING .)
    GREATER         reduce using rule 50 (expression -> STRING .)
    AND             reduce using rule 50 (expression -> STRING .)
    OR              reduce using rule 50 (expression -> STRING .)
    RPAREN          reduce using rule 50 (expression -> STRING .)
    RSQUARE         reduce using rule 50 (expression -> STRING .)
    COMMA           reduce using rule 50 (expression -> STRING .)


state 33

    (21) statement_print -> PRINT LPAREN . expression_list RPAREN SEMICOLON
    (23) expression_list -> . expression_list COMMA expression
    (24) expression_list -> . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression_list                shift and go to state 56
    expression                     shift and go to state 53

state 34

    (34) statement_if -> IF LPAREN . expression RPAREN statement
    (35) statement_if -> IF LPAREN . expression RPAREN statement ELSE statement
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 57

state 35

    (36) statement_while -> WHILE LPAREN . expression RPAREN statement
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 58

state 36

    (37) statement_for -> FOR LPAREN . assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (29) assign_expression_opt -> . assign_expression
    (30) assign_expression_opt -> . empty
    (28) assign_expression -> . ID EQUALS expression
    (33) empty -> .

    ID              shift and go to state 62
    SEMICOLON       reduce using rule 33 (empty -> .)

    assign_expression_opt          shift and go to state 59
    assign_expression              shift and go to state 60
    empty                          shift and go to state 61

state 37

    (38) block -> LBRACE statement_list . RBRACE
    (8) statement_list -> statement_list . statement
    (1) statement -> . FUNC ID LPAREN param_list RPAREN block
    (3) statement -> . RETURN expression SEMICOLON
    (10) statement -> . statement_function
    (11) statement -> . statement_return
    (12) statement -> . statement_print
    (13) statement -> . statement_assign
    (14) statement -> . statement_if
    (15) statement -> . statement_while
    (16) statement -> . statement_for
    (17) statement -> . statement_append
    (18) statement -> . block
    (19) statement_function -> . FUNC ID LPAREN param_list RPAREN block
    (20) statement_return -> . RETURN expression SEMICOLON
    (21) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (27) statement_assign -> . ID EQUALS expression SEMICOLON
    (34) statement_if -> . IF LPAREN expression RPAREN statement
    (35) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) statement_while -> . WHILE LPAREN expression RPAREN statement
    (37) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (22) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (38) block -> . LBRACE statement_list RBRACE

    RBRACE          shift and go to state 63
    FUNC            shift and go to state 4
    RETURN          shift and go to state 7
    PRINT           shift and go to state 16
    ID              shift and go to state 5
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    LBRACE          shift and go to state 20

    statement                      shift and go to state 21
    block                          shift and go to state 6
    statement_function             shift and go to state 8
    statement_return               shift and go to state 9
    statement_print                shift and go to state 10
    statement_assign               shift and go to state 11
    statement_if                   shift and go to state 12
    statement_while                shift and go to state 13
    statement_for                  shift and go to state 14
    statement_append               shift and go to state 15

state 38

    (1) statement -> FUNC ID LPAREN . param_list RPAREN block
    (19) statement_function -> FUNC ID LPAREN . param_list RPAREN block
    (4) param_list -> . param_list COMMA ID
    (5) param_list -> . ID
    (6) param_list -> . empty
    (33) empty -> .

    ID              shift and go to state 64
    RPAREN          reduce using rule 33 (empty -> .)
    COMMA           reduce using rule 33 (empty -> .)

    param_list                     shift and go to state 65
    empty                          shift and go to state 66

state 39

    (27) statement_assign -> ID EQUALS expression . SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    SEMICOLON       shift and go to state 67
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49


state 40

    (22) statement_append -> ID PERIOD APPEND . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 68


state 41

    (3) statement -> RETURN expression SEMICOLON .
    (20) statement_return -> RETURN expression SEMICOLON .

  ! reduce/reduce conflict for FUNC resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for RETURN resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for PRINT resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for ID resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for IF resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for WHILE resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for LBRACE resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for $end resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for RBRACE resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for ELSE resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
    FUNC            reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    ID              reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    LBRACE          reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 3 (statement -> RETURN expression SEMICOLON .)

  ! FUNC            [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! RETURN          [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! PRINT           [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! ID              [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! IF              [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! WHILE           [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! FOR             [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! LBRACE          [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! $end            [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! RBRACE          [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! ELSE            [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]


state 42

    (39) expression -> expression PLUS . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 69

state 43

    (40) expression -> expression MINUS . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 70

state 44

    (41) expression -> expression TIMES . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 71

state 45

    (42) expression -> expression DIVIDE . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 72

state 46

    (43) expression -> expression LESS . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 73

state 47

    (44) expression -> expression GREATER . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 74

state 48

    (45) expression -> expression AND . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 75

state 49

    (46) expression -> expression OR . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 76

state 50

    (2) expression -> ID LPAREN . expression_list RPAREN
    (23) expression_list -> . expression_list COMMA expression
    (24) expression_list -> . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression_list                shift and go to state 77
    expression                     shift and go to state 53

state 51

    (48) expression -> LPAREN expression . RPAREN
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    RPAREN          shift and go to state 78
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49


state 52

    (25) expression -> LSQUARE expression_list . RSQUARE
    (23) expression_list -> expression_list . COMMA expression

    RSQUARE         shift and go to state 79
    COMMA           shift and go to state 80


state 53

    (24) expression_list -> expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    RSQUARE         reduce using rule 24 (expression_list -> expression .)
    COMMA           reduce using rule 24 (expression_list -> expression .)
    RPAREN          reduce using rule 24 (expression_list -> expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49


state 54

    (26) expression -> LBRACE RBRACE .

    SEMICOLON       reduce using rule 26 (expression -> LBRACE RBRACE .)
    PLUS            reduce using rule 26 (expression -> LBRACE RBRACE .)
    MINUS           reduce using rule 26 (expression -> LBRACE RBRACE .)
    TIMES           reduce using rule 26 (expression -> LBRACE RBRACE .)
    DIVIDE          reduce using rule 26 (expression -> LBRACE RBRACE .)
    LESS            reduce using rule 26 (expression -> LBRACE RBRACE .)
    GREATER         reduce using rule 26 (expression -> LBRACE RBRACE .)
    AND             reduce using rule 26 (expression -> LBRACE RBRACE .)
    OR              reduce using rule 26 (expression -> LBRACE RBRACE .)
    RPAREN          reduce using rule 26 (expression -> LBRACE RBRACE .)
    RSQUARE         reduce using rule 26 (expression -> LBRACE RBRACE .)
    COMMA           reduce using rule 26 (expression -> LBRACE RBRACE .)


state 55

    (47) expression -> NOT expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    SEMICOLON       reduce using rule 47 (expression -> NOT expression .)
    PLUS            reduce using rule 47 (expression -> NOT expression .)
    MINUS           reduce using rule 47 (expression -> NOT expression .)
    TIMES           reduce using rule 47 (expression -> NOT expression .)
    DIVIDE          reduce using rule 47 (expression -> NOT expression .)
    LESS            reduce using rule 47 (expression -> NOT expression .)
    GREATER         reduce using rule 47 (expression -> NOT expression .)
    AND             reduce using rule 47 (expression -> NOT expression .)
    OR              reduce using rule 47 (expression -> NOT expression .)
    RPAREN          reduce using rule 47 (expression -> NOT expression .)
    RSQUARE         reduce using rule 47 (expression -> NOT expression .)
    COMMA           reduce using rule 47 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! TIMES           [ shift and go to state 44 ]
  ! DIVIDE          [ shift and go to state 45 ]
  ! LESS            [ shift and go to state 46 ]
  ! GREATER         [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]


state 56

    (21) statement_print -> PRINT LPAREN expression_list . RPAREN SEMICOLON
    (23) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 81
    COMMA           shift and go to state 80


state 57

    (34) statement_if -> IF LPAREN expression . RPAREN statement
    (35) statement_if -> IF LPAREN expression . RPAREN statement ELSE statement
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    RPAREN          shift and go to state 82
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49


state 58

    (36) statement_while -> WHILE LPAREN expression . RPAREN statement
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    RPAREN          shift and go to state 83
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49


state 59

    (37) statement_for -> FOR LPAREN assign_expression_opt . SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement

    SEMICOLON       shift and go to state 84


state 60

    (29) assign_expression_opt -> assign_expression .

    SEMICOLON       reduce using rule 29 (assign_expression_opt -> assign_expression .)
    RPAREN          reduce using rule 29 (assign_expression_opt -> assign_expression .)


state 61

    (30) assign_expression_opt -> empty .

    SEMICOLON       reduce using rule 30 (assign_expression_opt -> empty .)
    RPAREN          reduce using rule 30 (assign_expression_opt -> empty .)


state 62

    (28) assign_expression -> ID . EQUALS expression

    EQUALS          shift and go to state 85


state 63

    (38) block -> LBRACE statement_list RBRACE .

    FUNC            reduce using rule 38 (block -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 38 (block -> LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 38 (block -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 38 (block -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 38 (block -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 38 (block -> LBRACE statement_list RBRACE .)
    FOR             reduce using rule 38 (block -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 38 (block -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 38 (block -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 38 (block -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 38 (block -> LBRACE statement_list RBRACE .)


state 64

    (5) param_list -> ID .

    RPAREN          reduce using rule 5 (param_list -> ID .)
    COMMA           reduce using rule 5 (param_list -> ID .)


state 65

    (1) statement -> FUNC ID LPAREN param_list . RPAREN block
    (19) statement_function -> FUNC ID LPAREN param_list . RPAREN block
    (4) param_list -> param_list . COMMA ID

    RPAREN          shift and go to state 86
    COMMA           shift and go to state 87


state 66

    (6) param_list -> empty .

    RPAREN          reduce using rule 6 (param_list -> empty .)
    COMMA           reduce using rule 6 (param_list -> empty .)


state 67

    (27) statement_assign -> ID EQUALS expression SEMICOLON .

    FUNC            reduce using rule 27 (statement_assign -> ID EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 27 (statement_assign -> ID EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 27 (statement_assign -> ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 27 (statement_assign -> ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 27 (statement_assign -> ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 27 (statement_assign -> ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 27 (statement_assign -> ID EQUALS expression SEMICOLON .)
    LBRACE          reduce using rule 27 (statement_assign -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 27 (statement_assign -> ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 27 (statement_assign -> ID EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 27 (statement_assign -> ID EQUALS expression SEMICOLON .)


state 68

    (22) statement_append -> ID PERIOD APPEND LPAREN . expression RPAREN SEMICOLON
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 88

state 69

    (39) expression -> expression PLUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    SEMICOLON       reduce using rule 39 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 39 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 39 (expression -> expression PLUS expression .)
    LESS            reduce using rule 39 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 39 (expression -> expression PLUS expression .)
    AND             reduce using rule 39 (expression -> expression PLUS expression .)
    OR              reduce using rule 39 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 39 (expression -> expression PLUS expression .)
    RSQUARE         reduce using rule 39 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 39 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45

  ! TIMES           [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 46 ]
  ! GREATER         [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]


state 70

    (40) expression -> expression MINUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    SEMICOLON       reduce using rule 40 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 40 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 40 (expression -> expression MINUS expression .)
    LESS            reduce using rule 40 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 40 (expression -> expression MINUS expression .)
    AND             reduce using rule 40 (expression -> expression MINUS expression .)
    OR              reduce using rule 40 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 40 (expression -> expression MINUS expression .)
    RSQUARE         reduce using rule 40 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 40 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45

  ! TIMES           [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 46 ]
  ! GREATER         [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]


state 71

    (41) expression -> expression TIMES expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    SEMICOLON       reduce using rule 41 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 41 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 41 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 41 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 41 (expression -> expression TIMES expression .)
    LESS            reduce using rule 41 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 41 (expression -> expression TIMES expression .)
    AND             reduce using rule 41 (expression -> expression TIMES expression .)
    OR              reduce using rule 41 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 41 (expression -> expression TIMES expression .)
    RSQUARE         reduce using rule 41 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 41 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! TIMES           [ shift and go to state 44 ]
  ! DIVIDE          [ shift and go to state 45 ]
  ! LESS            [ shift and go to state 46 ]
  ! GREATER         [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]


state 72

    (42) expression -> expression DIVIDE expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    SEMICOLON       reduce using rule 42 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 42 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 42 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 42 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 42 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 42 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 42 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 42 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 42 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 42 (expression -> expression DIVIDE expression .)
    RSQUARE         reduce using rule 42 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 42 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! TIMES           [ shift and go to state 44 ]
  ! DIVIDE          [ shift and go to state 45 ]
  ! LESS            [ shift and go to state 46 ]
  ! GREATER         [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]


state 73

    (43) expression -> expression LESS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    SEMICOLON       reduce using rule 43 (expression -> expression LESS expression .)
    LESS            reduce using rule 43 (expression -> expression LESS expression .)
    GREATER         reduce using rule 43 (expression -> expression LESS expression .)
    AND             reduce using rule 43 (expression -> expression LESS expression .)
    OR              reduce using rule 43 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 43 (expression -> expression LESS expression .)
    RSQUARE         reduce using rule 43 (expression -> expression LESS expression .)
    COMMA           reduce using rule 43 (expression -> expression LESS expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45

  ! PLUS            [ reduce using rule 43 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression LESS expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression LESS expression .) ]
  ! LESS            [ shift and go to state 46 ]
  ! GREATER         [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]


state 74

    (44) expression -> expression GREATER expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    SEMICOLON       reduce using rule 44 (expression -> expression GREATER expression .)
    LESS            reduce using rule 44 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 44 (expression -> expression GREATER expression .)
    AND             reduce using rule 44 (expression -> expression GREATER expression .)
    OR              reduce using rule 44 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 44 (expression -> expression GREATER expression .)
    RSQUARE         reduce using rule 44 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 44 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45

  ! PLUS            [ reduce using rule 44 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression GREATER expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression GREATER expression .) ]
  ! LESS            [ shift and go to state 46 ]
  ! GREATER         [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]


state 75

    (45) expression -> expression AND expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    SEMICOLON       reduce using rule 45 (expression -> expression AND expression .)
    AND             reduce using rule 45 (expression -> expression AND expression .)
    OR              reduce using rule 45 (expression -> expression AND expression .)
    RPAREN          reduce using rule 45 (expression -> expression AND expression .)
    RSQUARE         reduce using rule 45 (expression -> expression AND expression .)
    COMMA           reduce using rule 45 (expression -> expression AND expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47

  ! PLUS            [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]


state 76

    (46) expression -> expression OR expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    SEMICOLON       reduce using rule 46 (expression -> expression OR expression .)
    OR              reduce using rule 46 (expression -> expression OR expression .)
    RPAREN          reduce using rule 46 (expression -> expression OR expression .)
    RSQUARE         reduce using rule 46 (expression -> expression OR expression .)
    COMMA           reduce using rule 46 (expression -> expression OR expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    AND             shift and go to state 48

  ! PLUS            [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 49 ]


state 77

    (2) expression -> ID LPAREN expression_list . RPAREN
    (23) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 89
    COMMA           shift and go to state 80


state 78

    (48) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    RSQUARE         reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 48 (expression -> LPAREN expression RPAREN .)


state 79

    (25) expression -> LSQUARE expression_list RSQUARE .

    SEMICOLON       reduce using rule 25 (expression -> LSQUARE expression_list RSQUARE .)
    PLUS            reduce using rule 25 (expression -> LSQUARE expression_list RSQUARE .)
    MINUS           reduce using rule 25 (expression -> LSQUARE expression_list RSQUARE .)
    TIMES           reduce using rule 25 (expression -> LSQUARE expression_list RSQUARE .)
    DIVIDE          reduce using rule 25 (expression -> LSQUARE expression_list RSQUARE .)
    LESS            reduce using rule 25 (expression -> LSQUARE expression_list RSQUARE .)
    GREATER         reduce using rule 25 (expression -> LSQUARE expression_list RSQUARE .)
    AND             reduce using rule 25 (expression -> LSQUARE expression_list RSQUARE .)
    OR              reduce using rule 25 (expression -> LSQUARE expression_list RSQUARE .)
    RPAREN          reduce using rule 25 (expression -> LSQUARE expression_list RSQUARE .)
    RSQUARE         reduce using rule 25 (expression -> LSQUARE expression_list RSQUARE .)
    COMMA           reduce using rule 25 (expression -> LSQUARE expression_list RSQUARE .)


state 80

    (23) expression_list -> expression_list COMMA . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 90

state 81

    (21) statement_print -> PRINT LPAREN expression_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 91


state 82

    (34) statement_if -> IF LPAREN expression RPAREN . statement
    (35) statement_if -> IF LPAREN expression RPAREN . statement ELSE statement
    (1) statement -> . FUNC ID LPAREN param_list RPAREN block
    (3) statement -> . RETURN expression SEMICOLON
    (10) statement -> . statement_function
    (11) statement -> . statement_return
    (12) statement -> . statement_print
    (13) statement -> . statement_assign
    (14) statement -> . statement_if
    (15) statement -> . statement_while
    (16) statement -> . statement_for
    (17) statement -> . statement_append
    (18) statement -> . block
    (19) statement_function -> . FUNC ID LPAREN param_list RPAREN block
    (20) statement_return -> . RETURN expression SEMICOLON
    (21) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (27) statement_assign -> . ID EQUALS expression SEMICOLON
    (34) statement_if -> . IF LPAREN expression RPAREN statement
    (35) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) statement_while -> . WHILE LPAREN expression RPAREN statement
    (37) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (22) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (38) block -> . LBRACE statement_list RBRACE

    FUNC            shift and go to state 4
    RETURN          shift and go to state 7
    PRINT           shift and go to state 16
    ID              shift and go to state 5
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    LBRACE          shift and go to state 20

    statement                      shift and go to state 92
    block                          shift and go to state 6
    statement_function             shift and go to state 8
    statement_return               shift and go to state 9
    statement_print                shift and go to state 10
    statement_assign               shift and go to state 11
    statement_if                   shift and go to state 12
    statement_while                shift and go to state 13
    statement_for                  shift and go to state 14
    statement_append               shift and go to state 15

state 83

    (36) statement_while -> WHILE LPAREN expression RPAREN . statement
    (1) statement -> . FUNC ID LPAREN param_list RPAREN block
    (3) statement -> . RETURN expression SEMICOLON
    (10) statement -> . statement_function
    (11) statement -> . statement_return
    (12) statement -> . statement_print
    (13) statement -> . statement_assign
    (14) statement -> . statement_if
    (15) statement -> . statement_while
    (16) statement -> . statement_for
    (17) statement -> . statement_append
    (18) statement -> . block
    (19) statement_function -> . FUNC ID LPAREN param_list RPAREN block
    (20) statement_return -> . RETURN expression SEMICOLON
    (21) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (27) statement_assign -> . ID EQUALS expression SEMICOLON
    (34) statement_if -> . IF LPAREN expression RPAREN statement
    (35) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) statement_while -> . WHILE LPAREN expression RPAREN statement
    (37) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (22) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (38) block -> . LBRACE statement_list RBRACE

    FUNC            shift and go to state 4
    RETURN          shift and go to state 7
    PRINT           shift and go to state 16
    ID              shift and go to state 5
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    LBRACE          shift and go to state 20

    statement                      shift and go to state 93
    block                          shift and go to state 6
    statement_function             shift and go to state 8
    statement_return               shift and go to state 9
    statement_print                shift and go to state 10
    statement_assign               shift and go to state 11
    statement_if                   shift and go to state 12
    statement_while                shift and go to state 13
    statement_for                  shift and go to state 14
    statement_append               shift and go to state 15

state 84

    (37) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON . expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (31) expression_opt -> . expression
    (32) expression_opt -> . empty
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID
    (33) empty -> .

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    SEMICOLON       reduce using rule 33 (empty -> .)

    expression_opt                 shift and go to state 94
    expression                     shift and go to state 95
    empty                          shift and go to state 96

state 85

    (28) assign_expression -> ID EQUALS . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (25) expression -> . LSQUARE expression_list RSQUARE
    (26) expression -> . LBRACE RBRACE
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression LESS expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . NOT expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . STRING
    (51) expression -> . ID

    ID              shift and go to state 26
    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 97

state 86

    (1) statement -> FUNC ID LPAREN param_list RPAREN . block
    (19) statement_function -> FUNC ID LPAREN param_list RPAREN . block
    (38) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 20

    block                          shift and go to state 98

state 87

    (4) param_list -> param_list COMMA . ID

    ID              shift and go to state 99


state 88

    (22) statement_append -> ID PERIOD APPEND LPAREN expression . RPAREN SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    RPAREN          shift and go to state 100
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49


state 89

    (2) expression -> ID LPAREN expression_list RPAREN .

    SEMICOLON       reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    PLUS            reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    TIMES           reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    LESS            reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    GREATER         reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    AND             reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    OR              reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    RSQUARE         reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)


state 90

    (23) expression_list -> expression_list COMMA expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    RSQUARE         reduce using rule 23 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 23 (expression_list -> expression_list COMMA expression .)
    RPAREN          reduce using rule 23 (expression_list -> expression_list COMMA expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49


state 91

    (21) statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .

    FUNC            reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    PRINT           reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    ID              reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    IF              reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    FOR             reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    LBRACE          reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    $end            reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    RBRACE          reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    ELSE            reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)


state 92

    (34) statement_if -> IF LPAREN expression RPAREN statement .
    (35) statement_if -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    FUNC            reduce using rule 34 (statement_if -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 34 (statement_if -> IF LPAREN expression RPAREN statement .)
    PRINT           reduce using rule 34 (statement_if -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 34 (statement_if -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 34 (statement_if -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 34 (statement_if -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 34 (statement_if -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 34 (statement_if -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 34 (statement_if -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 34 (statement_if -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 101

  ! ELSE            [ reduce using rule 34 (statement_if -> IF LPAREN expression RPAREN statement .) ]


state 93

    (36) statement_while -> WHILE LPAREN expression RPAREN statement .

    FUNC            reduce using rule 36 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 36 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    PRINT           reduce using rule 36 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 36 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 36 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 36 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 36 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 36 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 36 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 36 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 36 (statement_while -> WHILE LPAREN expression RPAREN statement .)


state 94

    (37) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt . SEMICOLON assign_expression_opt RPAREN statement

    SEMICOLON       shift and go to state 102


state 95

    (31) expression_opt -> expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    SEMICOLON       reduce using rule 31 (expression_opt -> expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49


state 96

    (32) expression_opt -> empty .

    SEMICOLON       reduce using rule 32 (expression_opt -> empty .)


state 97

    (28) assign_expression -> ID EQUALS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . LESS expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    SEMICOLON       reduce using rule 28 (assign_expression -> ID EQUALS expression .)
    RPAREN          reduce using rule 28 (assign_expression -> ID EQUALS expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49


state 98

    (1) statement -> FUNC ID LPAREN param_list RPAREN block .
    (19) statement_function -> FUNC ID LPAREN param_list RPAREN block .

  ! reduce/reduce conflict for FUNC resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for RETURN resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for PRINT resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for ID resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for IF resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for WHILE resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for FOR resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for LBRACE resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for $end resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for RBRACE resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for ELSE resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    FUNC            reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    RETURN          reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    PRINT           reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    ID              reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    IF              reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    WHILE           reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    FOR             reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    LBRACE          reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    $end            reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    RBRACE          reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    ELSE            reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)

  ! FUNC            [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! RETURN          [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! PRINT           [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! ID              [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! IF              [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! WHILE           [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! FOR             [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! LBRACE          [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! $end            [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! RBRACE          [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! ELSE            [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]


state 99

    (4) param_list -> param_list COMMA ID .

    RPAREN          reduce using rule 4 (param_list -> param_list COMMA ID .)
    COMMA           reduce using rule 4 (param_list -> param_list COMMA ID .)


state 100

    (22) statement_append -> ID PERIOD APPEND LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 103


state 101

    (35) statement_if -> IF LPAREN expression RPAREN statement ELSE . statement
    (1) statement -> . FUNC ID LPAREN param_list RPAREN block
    (3) statement -> . RETURN expression SEMICOLON
    (10) statement -> . statement_function
    (11) statement -> . statement_return
    (12) statement -> . statement_print
    (13) statement -> . statement_assign
    (14) statement -> . statement_if
    (15) statement -> . statement_while
    (16) statement -> . statement_for
    (17) statement -> . statement_append
    (18) statement -> . block
    (19) statement_function -> . FUNC ID LPAREN param_list RPAREN block
    (20) statement_return -> . RETURN expression SEMICOLON
    (21) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (27) statement_assign -> . ID EQUALS expression SEMICOLON
    (34) statement_if -> . IF LPAREN expression RPAREN statement
    (35) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) statement_while -> . WHILE LPAREN expression RPAREN statement
    (37) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (22) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (38) block -> . LBRACE statement_list RBRACE

    FUNC            shift and go to state 4
    RETURN          shift and go to state 7
    PRINT           shift and go to state 16
    ID              shift and go to state 5
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    LBRACE          shift and go to state 20

    statement                      shift and go to state 104
    block                          shift and go to state 6
    statement_function             shift and go to state 8
    statement_return               shift and go to state 9
    statement_print                shift and go to state 10
    statement_assign               shift and go to state 11
    statement_if                   shift and go to state 12
    statement_while                shift and go to state 13
    statement_for                  shift and go to state 14
    statement_append               shift and go to state 15

state 102

    (37) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON . assign_expression_opt RPAREN statement
    (29) assign_expression_opt -> . assign_expression
    (30) assign_expression_opt -> . empty
    (28) assign_expression -> . ID EQUALS expression
    (33) empty -> .

    ID              shift and go to state 62
    RPAREN          reduce using rule 33 (empty -> .)

    assign_expression_opt          shift and go to state 105
    assign_expression              shift and go to state 60
    empty                          shift and go to state 61

state 103

    (22) statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .

    FUNC            reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)


state 104

    (35) statement_if -> IF LPAREN expression RPAREN statement ELSE statement .

    FUNC            reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    PRINT           reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    $end            reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)


state 105

    (37) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt . RPAREN statement

    RPAREN          shift and go to state 106


state 106

    (37) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN . statement
    (1) statement -> . FUNC ID LPAREN param_list RPAREN block
    (3) statement -> . RETURN expression SEMICOLON
    (10) statement -> . statement_function
    (11) statement -> . statement_return
    (12) statement -> . statement_print
    (13) statement -> . statement_assign
    (14) statement -> . statement_if
    (15) statement -> . statement_while
    (16) statement -> . statement_for
    (17) statement -> . statement_append
    (18) statement -> . block
    (19) statement_function -> . FUNC ID LPAREN param_list RPAREN block
    (20) statement_return -> . RETURN expression SEMICOLON
    (21) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (27) statement_assign -> . ID EQUALS expression SEMICOLON
    (34) statement_if -> . IF LPAREN expression RPAREN statement
    (35) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) statement_while -> . WHILE LPAREN expression RPAREN statement
    (37) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (22) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (38) block -> . LBRACE statement_list RBRACE

    FUNC            shift and go to state 4
    RETURN          shift and go to state 7
    PRINT           shift and go to state 16
    ID              shift and go to state 5
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    LBRACE          shift and go to state 20

    statement                      shift and go to state 107
    block                          shift and go to state 6
    statement_function             shift and go to state 8
    statement_return               shift and go to state 9
    statement_print                shift and go to state 10
    statement_assign               shift and go to state 11
    statement_if                   shift and go to state 12
    statement_while                shift and go to state 13
    statement_for                  shift and go to state 14
    statement_append               shift and go to state 15

state 107

    (37) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .

    FUNC            reduce using rule 37 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    RETURN          reduce using rule 37 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    PRINT           reduce using rule 37 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    ID              reduce using rule 37 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    IF              reduce using rule 37 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    WHILE           reduce using rule 37 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    FOR             reduce using rule 37 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    LBRACE          reduce using rule 37 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    $end            reduce using rule 37 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    RBRACE          reduce using rule 37 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    ELSE            reduce using rule 37 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 92 resolved as shift
WARNING: reduce/reduce conflict in state 41 resolved using rule (statement -> RETURN expression SEMICOLON)
WARNING: rejected rule (statement_return -> RETURN expression SEMICOLON) in state 41
WARNING: reduce/reduce conflict in state 98 resolved using rule (statement -> FUNC ID LPAREN param_list RPAREN block)
WARNING: rejected rule (statement_function -> FUNC ID LPAREN param_list RPAREN block) in state 98
WARNING: Rule (statement_return -> RETURN expression SEMICOLON) is never reduced
WARNING: Rule (statement_function -> FUNC ID LPAREN param_list RPAREN block) is never reduced
