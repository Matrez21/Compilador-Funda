Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> statement_print
Rule 5     statement -> statement_assign
Rule 6     statement -> statement_if
Rule 7     statement -> statement_while
Rule 8     statement -> statement_for
Rule 9     statement -> statement_append
Rule 10    statement -> block
Rule 11    statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON
Rule 12    statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
Rule 13    expression_list -> expression_list COMMA expression
Rule 14    expression_list -> expression
Rule 15    expression -> LSQUARE expression_list RSQUARE
Rule 16    expression -> LBRACE RBRACE
Rule 17    statement_assign -> ID EQUALS expression SEMICOLON
Rule 18    assign_expression -> ID EQUALS expression
Rule 19    assign_expression_opt -> assign_expression
Rule 20    assign_expression_opt -> empty
Rule 21    expression_opt -> expression
Rule 22    expression_opt -> empty
Rule 23    empty -> <empty>
Rule 24    statement_if -> IF LPAREN expression RPAREN statement
Rule 25    statement_if -> IF LPAREN expression RPAREN statement ELSE statement
Rule 26    statement_while -> WHILE LPAREN expression RPAREN statement
Rule 27    statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
Rule 28    block -> LBRACE statement_list RBRACE
Rule 29    expression -> expression PLUS expression
Rule 30    expression -> expression MINUS expression
Rule 31    expression -> expression TIMES expression
Rule 32    expression -> expression DIVIDE expression
Rule 33    expression -> expression LESS expression
Rule 34    expression -> expression GREATER expression
Rule 35    expression -> expression AND expression
Rule 36    expression -> expression OR expression
Rule 37    expression -> NOT expression
Rule 38    expression -> LPAREN expression RPAREN
Rule 39    expression -> NUMBER
Rule 40    expression -> STRING
Rule 41    expression -> ID

Terminals, with rules where they appear

AND                  : 35
APPEND               : 12
COMMA                : 13
DIVIDE               : 32
ELSE                 : 25
EQUALS               : 17 18
FOR                  : 27
GREATER              : 34
ID                   : 12 17 18 41
IF                   : 24 25
LBRACE               : 16 28
LESS                 : 33
LPAREN               : 11 12 24 25 26 27 38
LSQUARE              : 15
MINUS                : 30
NOT                  : 37
NUMBER               : 39
OR                   : 36
PERIOD               : 12
PLUS                 : 29
PRINT                : 11
RBRACE               : 16 28
RPAREN               : 11 12 24 25 26 27 38
RSQUARE              : 15
SEMICOLON            : 11 12 17 27 27
STRING               : 40
TIMES                : 31
WHILE                : 26
error                : 

Nonterminals, with rules where they appear

assign_expression    : 19
assign_expression_opt : 27 27
block                : 10
empty                : 20 22
expression           : 12 13 14 17 18 21 24 25 26 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 38
expression_list      : 11 13 15
expression_opt       : 27
program              : 0
statement            : 2 3 24 25 25 26 27
statement_append     : 9
statement_assign     : 5
statement_for        : 8
statement_if         : 6
statement_list       : 1 2 28
statement_print      : 4
statement_while      : 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . statement_print
    (5) statement -> . statement_assign
    (6) statement -> . statement_if
    (7) statement -> . statement_while
    (8) statement -> . statement_for
    (9) statement -> . statement_append
    (10) statement -> . block
    (11) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (17) statement_assign -> . ID EQUALS expression SEMICOLON
    (24) statement_if -> . IF LPAREN expression RPAREN statement
    (25) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (26) statement_while -> . WHILE LPAREN expression RPAREN statement
    (27) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (12) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (28) block -> . LBRACE statement_list RBRACE

    PRINT           shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    LBRACE          shift and go to state 16

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    statement_print                shift and go to state 4
    statement_assign               shift and go to state 5
    statement_if                   shift and go to state 6
    statement_while                shift and go to state 7
    statement_for                  shift and go to state 8
    statement_append               shift and go to state 9
    block                          shift and go to state 10

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . statement_print
    (5) statement -> . statement_assign
    (6) statement -> . statement_if
    (7) statement -> . statement_while
    (8) statement -> . statement_for
    (9) statement -> . statement_append
    (10) statement -> . block
    (11) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (17) statement_assign -> . ID EQUALS expression SEMICOLON
    (24) statement_if -> . IF LPAREN expression RPAREN statement
    (25) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (26) statement_while -> . WHILE LPAREN expression RPAREN statement
    (27) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (12) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (28) block -> . LBRACE statement_list RBRACE

    $end            reduce using rule 1 (program -> statement_list .)
    PRINT           shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    LBRACE          shift and go to state 16

    statement                      shift and go to state 17
    statement_print                shift and go to state 4
    statement_assign               shift and go to state 5
    statement_if                   shift and go to state 6
    statement_while                shift and go to state 7
    statement_for                  shift and go to state 8
    statement_append               shift and go to state 9
    block                          shift and go to state 10

state 3

    (3) statement_list -> statement .

    PRINT           reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    WHILE           reduce using rule 3 (statement_list -> statement .)
    FOR             reduce using rule 3 (statement_list -> statement .)
    LBRACE          reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> statement_print .

    PRINT           reduce using rule 4 (statement -> statement_print .)
    ID              reduce using rule 4 (statement -> statement_print .)
    IF              reduce using rule 4 (statement -> statement_print .)
    WHILE           reduce using rule 4 (statement -> statement_print .)
    FOR             reduce using rule 4 (statement -> statement_print .)
    LBRACE          reduce using rule 4 (statement -> statement_print .)
    $end            reduce using rule 4 (statement -> statement_print .)
    RBRACE          reduce using rule 4 (statement -> statement_print .)
    ELSE            reduce using rule 4 (statement -> statement_print .)


state 5

    (5) statement -> statement_assign .

    PRINT           reduce using rule 5 (statement -> statement_assign .)
    ID              reduce using rule 5 (statement -> statement_assign .)
    IF              reduce using rule 5 (statement -> statement_assign .)
    WHILE           reduce using rule 5 (statement -> statement_assign .)
    FOR             reduce using rule 5 (statement -> statement_assign .)
    LBRACE          reduce using rule 5 (statement -> statement_assign .)
    $end            reduce using rule 5 (statement -> statement_assign .)
    RBRACE          reduce using rule 5 (statement -> statement_assign .)
    ELSE            reduce using rule 5 (statement -> statement_assign .)


state 6

    (6) statement -> statement_if .

    PRINT           reduce using rule 6 (statement -> statement_if .)
    ID              reduce using rule 6 (statement -> statement_if .)
    IF              reduce using rule 6 (statement -> statement_if .)
    WHILE           reduce using rule 6 (statement -> statement_if .)
    FOR             reduce using rule 6 (statement -> statement_if .)
    LBRACE          reduce using rule 6 (statement -> statement_if .)
    $end            reduce using rule 6 (statement -> statement_if .)
    RBRACE          reduce using rule 6 (statement -> statement_if .)
    ELSE            reduce using rule 6 (statement -> statement_if .)


state 7

    (7) statement -> statement_while .

    PRINT           reduce using rule 7 (statement -> statement_while .)
    ID              reduce using rule 7 (statement -> statement_while .)
    IF              reduce using rule 7 (statement -> statement_while .)
    WHILE           reduce using rule 7 (statement -> statement_while .)
    FOR             reduce using rule 7 (statement -> statement_while .)
    LBRACE          reduce using rule 7 (statement -> statement_while .)
    $end            reduce using rule 7 (statement -> statement_while .)
    RBRACE          reduce using rule 7 (statement -> statement_while .)
    ELSE            reduce using rule 7 (statement -> statement_while .)


state 8

    (8) statement -> statement_for .

    PRINT           reduce using rule 8 (statement -> statement_for .)
    ID              reduce using rule 8 (statement -> statement_for .)
    IF              reduce using rule 8 (statement -> statement_for .)
    WHILE           reduce using rule 8 (statement -> statement_for .)
    FOR             reduce using rule 8 (statement -> statement_for .)
    LBRACE          reduce using rule 8 (statement -> statement_for .)
    $end            reduce using rule 8 (statement -> statement_for .)
    RBRACE          reduce using rule 8 (statement -> statement_for .)
    ELSE            reduce using rule 8 (statement -> statement_for .)


state 9

    (9) statement -> statement_append .

    PRINT           reduce using rule 9 (statement -> statement_append .)
    ID              reduce using rule 9 (statement -> statement_append .)
    IF              reduce using rule 9 (statement -> statement_append .)
    WHILE           reduce using rule 9 (statement -> statement_append .)
    FOR             reduce using rule 9 (statement -> statement_append .)
    LBRACE          reduce using rule 9 (statement -> statement_append .)
    $end            reduce using rule 9 (statement -> statement_append .)
    RBRACE          reduce using rule 9 (statement -> statement_append .)
    ELSE            reduce using rule 9 (statement -> statement_append .)


state 10

    (10) statement -> block .

    PRINT           reduce using rule 10 (statement -> block .)
    ID              reduce using rule 10 (statement -> block .)
    IF              reduce using rule 10 (statement -> block .)
    WHILE           reduce using rule 10 (statement -> block .)
    FOR             reduce using rule 10 (statement -> block .)
    LBRACE          reduce using rule 10 (statement -> block .)
    $end            reduce using rule 10 (statement -> block .)
    RBRACE          reduce using rule 10 (statement -> block .)
    ELSE            reduce using rule 10 (statement -> block .)


state 11

    (11) statement_print -> PRINT . LPAREN expression_list RPAREN SEMICOLON

    LPAREN          shift and go to state 18


state 12

    (17) statement_assign -> ID . EQUALS expression SEMICOLON
    (12) statement_append -> ID . PERIOD APPEND LPAREN expression RPAREN SEMICOLON

    EQUALS          shift and go to state 19
    PERIOD          shift and go to state 20


state 13

    (24) statement_if -> IF . LPAREN expression RPAREN statement
    (25) statement_if -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 21


state 14

    (26) statement_while -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 22


state 15

    (27) statement_for -> FOR . LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement

    LPAREN          shift and go to state 23


state 16

    (28) block -> LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . statement_print
    (5) statement -> . statement_assign
    (6) statement -> . statement_if
    (7) statement -> . statement_while
    (8) statement -> . statement_for
    (9) statement -> . statement_append
    (10) statement -> . block
    (11) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (17) statement_assign -> . ID EQUALS expression SEMICOLON
    (24) statement_if -> . IF LPAREN expression RPAREN statement
    (25) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (26) statement_while -> . WHILE LPAREN expression RPAREN statement
    (27) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (12) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (28) block -> . LBRACE statement_list RBRACE

    PRINT           shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    LBRACE          shift and go to state 16

    statement_list                 shift and go to state 24
    statement                      shift and go to state 3
    statement_print                shift and go to state 4
    statement_assign               shift and go to state 5
    statement_if                   shift and go to state 6
    statement_while                shift and go to state 7
    statement_for                  shift and go to state 8
    statement_append               shift and go to state 9
    block                          shift and go to state 10

state 17

    (2) statement_list -> statement_list statement .

    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 2 (statement_list -> statement_list statement .)
    FOR             reduce using rule 2 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement_list statement .)


state 18

    (11) statement_print -> PRINT LPAREN . expression_list RPAREN SEMICOLON
    (13) expression_list -> . expression_list COMMA expression
    (14) expression_list -> . expression
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression_list                shift and go to state 26
    expression                     shift and go to state 27

state 19

    (17) statement_assign -> ID EQUALS . expression SEMICOLON
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression                     shift and go to state 34

state 20

    (12) statement_append -> ID PERIOD . APPEND LPAREN expression RPAREN SEMICOLON

    APPEND          shift and go to state 35


state 21

    (24) statement_if -> IF LPAREN . expression RPAREN statement
    (25) statement_if -> IF LPAREN . expression RPAREN statement ELSE statement
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression                     shift and go to state 36

state 22

    (26) statement_while -> WHILE LPAREN . expression RPAREN statement
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression                     shift and go to state 37

state 23

    (27) statement_for -> FOR LPAREN . assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (19) assign_expression_opt -> . assign_expression
    (20) assign_expression_opt -> . empty
    (18) assign_expression -> . ID EQUALS expression
    (23) empty -> .

    ID              shift and go to state 41
    SEMICOLON       reduce using rule 23 (empty -> .)

    assign_expression_opt          shift and go to state 38
    assign_expression              shift and go to state 39
    empty                          shift and go to state 40

state 24

    (28) block -> LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . statement_print
    (5) statement -> . statement_assign
    (6) statement -> . statement_if
    (7) statement -> . statement_while
    (8) statement -> . statement_for
    (9) statement -> . statement_append
    (10) statement -> . block
    (11) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (17) statement_assign -> . ID EQUALS expression SEMICOLON
    (24) statement_if -> . IF LPAREN expression RPAREN statement
    (25) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (26) statement_while -> . WHILE LPAREN expression RPAREN statement
    (27) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (12) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (28) block -> . LBRACE statement_list RBRACE

    RBRACE          shift and go to state 42
    PRINT           shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    LBRACE          shift and go to state 16

    statement                      shift and go to state 17
    statement_print                shift and go to state 4
    statement_assign               shift and go to state 5
    statement_if                   shift and go to state 6
    statement_while                shift and go to state 7
    statement_for                  shift and go to state 8
    statement_append               shift and go to state 9
    block                          shift and go to state 10

state 25

    (38) expression -> LPAREN . expression RPAREN
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression                     shift and go to state 43

state 26

    (11) statement_print -> PRINT LPAREN expression_list . RPAREN SEMICOLON
    (13) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 44
    COMMA           shift and go to state 45


state 27

    (14) expression_list -> expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    RPAREN          reduce using rule 14 (expression_list -> expression .)
    COMMA           reduce using rule 14 (expression_list -> expression .)
    RSQUARE         reduce using rule 14 (expression_list -> expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    LESS            shift and go to state 50
    GREATER         shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 28

    (15) expression -> LSQUARE . expression_list RSQUARE
    (13) expression_list -> . expression_list COMMA expression
    (14) expression_list -> . expression
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression_list                shift and go to state 54
    expression                     shift and go to state 27

state 29

    (16) expression -> LBRACE . RBRACE

    RBRACE          shift and go to state 55


state 30

    (37) expression -> NOT . expression
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression                     shift and go to state 56

state 31

    (39) expression -> NUMBER .

    PLUS            reduce using rule 39 (expression -> NUMBER .)
    MINUS           reduce using rule 39 (expression -> NUMBER .)
    TIMES           reduce using rule 39 (expression -> NUMBER .)
    DIVIDE          reduce using rule 39 (expression -> NUMBER .)
    LESS            reduce using rule 39 (expression -> NUMBER .)
    GREATER         reduce using rule 39 (expression -> NUMBER .)
    AND             reduce using rule 39 (expression -> NUMBER .)
    OR              reduce using rule 39 (expression -> NUMBER .)
    RPAREN          reduce using rule 39 (expression -> NUMBER .)
    COMMA           reduce using rule 39 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 39 (expression -> NUMBER .)
    RSQUARE         reduce using rule 39 (expression -> NUMBER .)


state 32

    (40) expression -> STRING .

    PLUS            reduce using rule 40 (expression -> STRING .)
    MINUS           reduce using rule 40 (expression -> STRING .)
    TIMES           reduce using rule 40 (expression -> STRING .)
    DIVIDE          reduce using rule 40 (expression -> STRING .)
    LESS            reduce using rule 40 (expression -> STRING .)
    GREATER         reduce using rule 40 (expression -> STRING .)
    AND             reduce using rule 40 (expression -> STRING .)
    OR              reduce using rule 40 (expression -> STRING .)
    RPAREN          reduce using rule 40 (expression -> STRING .)
    COMMA           reduce using rule 40 (expression -> STRING .)
    SEMICOLON       reduce using rule 40 (expression -> STRING .)
    RSQUARE         reduce using rule 40 (expression -> STRING .)


state 33

    (41) expression -> ID .

    PLUS            reduce using rule 41 (expression -> ID .)
    MINUS           reduce using rule 41 (expression -> ID .)
    TIMES           reduce using rule 41 (expression -> ID .)
    DIVIDE          reduce using rule 41 (expression -> ID .)
    LESS            reduce using rule 41 (expression -> ID .)
    GREATER         reduce using rule 41 (expression -> ID .)
    AND             reduce using rule 41 (expression -> ID .)
    OR              reduce using rule 41 (expression -> ID .)
    RPAREN          reduce using rule 41 (expression -> ID .)
    COMMA           reduce using rule 41 (expression -> ID .)
    SEMICOLON       reduce using rule 41 (expression -> ID .)
    RSQUARE         reduce using rule 41 (expression -> ID .)


state 34

    (17) statement_assign -> ID EQUALS expression . SEMICOLON
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    SEMICOLON       shift and go to state 57
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    LESS            shift and go to state 50
    GREATER         shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 35

    (12) statement_append -> ID PERIOD APPEND . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 58


state 36

    (24) statement_if -> IF LPAREN expression . RPAREN statement
    (25) statement_if -> IF LPAREN expression . RPAREN statement ELSE statement
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    RPAREN          shift and go to state 59
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    LESS            shift and go to state 50
    GREATER         shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 37

    (26) statement_while -> WHILE LPAREN expression . RPAREN statement
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    RPAREN          shift and go to state 60
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    LESS            shift and go to state 50
    GREATER         shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 38

    (27) statement_for -> FOR LPAREN assign_expression_opt . SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement

    SEMICOLON       shift and go to state 61


state 39

    (19) assign_expression_opt -> assign_expression .

    SEMICOLON       reduce using rule 19 (assign_expression_opt -> assign_expression .)
    RPAREN          reduce using rule 19 (assign_expression_opt -> assign_expression .)


state 40

    (20) assign_expression_opt -> empty .

    SEMICOLON       reduce using rule 20 (assign_expression_opt -> empty .)
    RPAREN          reduce using rule 20 (assign_expression_opt -> empty .)


state 41

    (18) assign_expression -> ID . EQUALS expression

    EQUALS          shift and go to state 62


state 42

    (28) block -> LBRACE statement_list RBRACE .

    PRINT           reduce using rule 28 (block -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 28 (block -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 28 (block -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 28 (block -> LBRACE statement_list RBRACE .)
    FOR             reduce using rule 28 (block -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 28 (block -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 28 (block -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 28 (block -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 28 (block -> LBRACE statement_list RBRACE .)


state 43

    (38) expression -> LPAREN expression . RPAREN
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    RPAREN          shift and go to state 63
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    LESS            shift and go to state 50
    GREATER         shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 44

    (11) statement_print -> PRINT LPAREN expression_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 64


state 45

    (13) expression_list -> expression_list COMMA . expression
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression                     shift and go to state 65

state 46

    (29) expression -> expression PLUS . expression
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression                     shift and go to state 66

state 47

    (30) expression -> expression MINUS . expression
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression                     shift and go to state 67

state 48

    (31) expression -> expression TIMES . expression
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression                     shift and go to state 68

state 49

    (32) expression -> expression DIVIDE . expression
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression                     shift and go to state 69

state 50

    (33) expression -> expression LESS . expression
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression                     shift and go to state 70

state 51

    (34) expression -> expression GREATER . expression
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression                     shift and go to state 71

state 52

    (35) expression -> expression AND . expression
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression                     shift and go to state 72

state 53

    (36) expression -> expression OR . expression
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression                     shift and go to state 73

state 54

    (15) expression -> LSQUARE expression_list . RSQUARE
    (13) expression_list -> expression_list . COMMA expression

    RSQUARE         shift and go to state 74
    COMMA           shift and go to state 45


state 55

    (16) expression -> LBRACE RBRACE .

    PLUS            reduce using rule 16 (expression -> LBRACE RBRACE .)
    MINUS           reduce using rule 16 (expression -> LBRACE RBRACE .)
    TIMES           reduce using rule 16 (expression -> LBRACE RBRACE .)
    DIVIDE          reduce using rule 16 (expression -> LBRACE RBRACE .)
    LESS            reduce using rule 16 (expression -> LBRACE RBRACE .)
    GREATER         reduce using rule 16 (expression -> LBRACE RBRACE .)
    AND             reduce using rule 16 (expression -> LBRACE RBRACE .)
    OR              reduce using rule 16 (expression -> LBRACE RBRACE .)
    RPAREN          reduce using rule 16 (expression -> LBRACE RBRACE .)
    COMMA           reduce using rule 16 (expression -> LBRACE RBRACE .)
    SEMICOLON       reduce using rule 16 (expression -> LBRACE RBRACE .)
    RSQUARE         reduce using rule 16 (expression -> LBRACE RBRACE .)


state 56

    (37) expression -> NOT expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    PLUS            reduce using rule 37 (expression -> NOT expression .)
    MINUS           reduce using rule 37 (expression -> NOT expression .)
    TIMES           reduce using rule 37 (expression -> NOT expression .)
    DIVIDE          reduce using rule 37 (expression -> NOT expression .)
    LESS            reduce using rule 37 (expression -> NOT expression .)
    GREATER         reduce using rule 37 (expression -> NOT expression .)
    AND             reduce using rule 37 (expression -> NOT expression .)
    OR              reduce using rule 37 (expression -> NOT expression .)
    RPAREN          reduce using rule 37 (expression -> NOT expression .)
    COMMA           reduce using rule 37 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 37 (expression -> NOT expression .)
    RSQUARE         reduce using rule 37 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! TIMES           [ shift and go to state 48 ]
  ! DIVIDE          [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! GREATER         [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 57

    (17) statement_assign -> ID EQUALS expression SEMICOLON .

    PRINT           reduce using rule 17 (statement_assign -> ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 17 (statement_assign -> ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 17 (statement_assign -> ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 17 (statement_assign -> ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 17 (statement_assign -> ID EQUALS expression SEMICOLON .)
    LBRACE          reduce using rule 17 (statement_assign -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 17 (statement_assign -> ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 17 (statement_assign -> ID EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 17 (statement_assign -> ID EQUALS expression SEMICOLON .)


state 58

    (12) statement_append -> ID PERIOD APPEND LPAREN . expression RPAREN SEMICOLON
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression                     shift and go to state 75

state 59

    (24) statement_if -> IF LPAREN expression RPAREN . statement
    (25) statement_if -> IF LPAREN expression RPAREN . statement ELSE statement
    (4) statement -> . statement_print
    (5) statement -> . statement_assign
    (6) statement -> . statement_if
    (7) statement -> . statement_while
    (8) statement -> . statement_for
    (9) statement -> . statement_append
    (10) statement -> . block
    (11) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (17) statement_assign -> . ID EQUALS expression SEMICOLON
    (24) statement_if -> . IF LPAREN expression RPAREN statement
    (25) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (26) statement_while -> . WHILE LPAREN expression RPAREN statement
    (27) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (12) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (28) block -> . LBRACE statement_list RBRACE

    PRINT           shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    LBRACE          shift and go to state 16

    statement                      shift and go to state 76
    statement_print                shift and go to state 4
    statement_assign               shift and go to state 5
    statement_if                   shift and go to state 6
    statement_while                shift and go to state 7
    statement_for                  shift and go to state 8
    statement_append               shift and go to state 9
    block                          shift and go to state 10

state 60

    (26) statement_while -> WHILE LPAREN expression RPAREN . statement
    (4) statement -> . statement_print
    (5) statement -> . statement_assign
    (6) statement -> . statement_if
    (7) statement -> . statement_while
    (8) statement -> . statement_for
    (9) statement -> . statement_append
    (10) statement -> . block
    (11) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (17) statement_assign -> . ID EQUALS expression SEMICOLON
    (24) statement_if -> . IF LPAREN expression RPAREN statement
    (25) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (26) statement_while -> . WHILE LPAREN expression RPAREN statement
    (27) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (12) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (28) block -> . LBRACE statement_list RBRACE

    PRINT           shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    LBRACE          shift and go to state 16

    statement                      shift and go to state 77
    statement_print                shift and go to state 4
    statement_assign               shift and go to state 5
    statement_if                   shift and go to state 6
    statement_while                shift and go to state 7
    statement_for                  shift and go to state 8
    statement_append               shift and go to state 9
    block                          shift and go to state 10

state 61

    (27) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON . expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (21) expression_opt -> . expression
    (22) expression_opt -> . empty
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID
    (23) empty -> .

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33
    SEMICOLON       reduce using rule 23 (empty -> .)

    expression_opt                 shift and go to state 78
    expression                     shift and go to state 79
    empty                          shift and go to state 80

state 62

    (18) assign_expression -> ID EQUALS . expression
    (15) expression -> . LSQUARE expression_list RSQUARE
    (16) expression -> . LBRACE RBRACE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . NOT expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . ID

    LSQUARE         shift and go to state 28
    LBRACE          shift and go to state 29
    NOT             shift and go to state 30
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 31
    STRING          shift and go to state 32
    ID              shift and go to state 33

    expression                     shift and go to state 81

state 63

    (38) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    RSQUARE         reduce using rule 38 (expression -> LPAREN expression RPAREN .)


state 64

    (11) statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .

    PRINT           reduce using rule 11 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    ID              reduce using rule 11 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    IF              reduce using rule 11 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 11 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    FOR             reduce using rule 11 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    LBRACE          reduce using rule 11 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    $end            reduce using rule 11 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    RBRACE          reduce using rule 11 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    ELSE            reduce using rule 11 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)


state 65

    (13) expression_list -> expression_list COMMA expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    RPAREN          reduce using rule 13 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 13 (expression_list -> expression_list COMMA expression .)
    RSQUARE         reduce using rule 13 (expression_list -> expression_list COMMA expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    LESS            shift and go to state 50
    GREATER         shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 66

    (29) expression -> expression PLUS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    PLUS            reduce using rule 29 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 29 (expression -> expression PLUS expression .)
    LESS            reduce using rule 29 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 29 (expression -> expression PLUS expression .)
    AND             reduce using rule 29 (expression -> expression PLUS expression .)
    OR              reduce using rule 29 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 29 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 29 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression PLUS expression .)
    RSQUARE         reduce using rule 29 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! TIMES           [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! LESS            [ shift and go to state 50 ]
  ! GREATER         [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 67

    (30) expression -> expression MINUS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    PLUS            reduce using rule 30 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 30 (expression -> expression MINUS expression .)
    LESS            reduce using rule 30 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 30 (expression -> expression MINUS expression .)
    AND             reduce using rule 30 (expression -> expression MINUS expression .)
    OR              reduce using rule 30 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 30 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 30 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression MINUS expression .)
    RSQUARE         reduce using rule 30 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! TIMES           [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! LESS            [ shift and go to state 50 ]
  ! GREATER         [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 68

    (31) expression -> expression TIMES expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    PLUS            reduce using rule 31 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 31 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 31 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 31 (expression -> expression TIMES expression .)
    LESS            reduce using rule 31 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 31 (expression -> expression TIMES expression .)
    AND             reduce using rule 31 (expression -> expression TIMES expression .)
    OR              reduce using rule 31 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 31 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 31 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression TIMES expression .)
    RSQUARE         reduce using rule 31 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! TIMES           [ shift and go to state 48 ]
  ! DIVIDE          [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! GREATER         [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 69

    (32) expression -> expression DIVIDE expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    PLUS            reduce using rule 32 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 32 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 32 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 32 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 32 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 32 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 32 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 32 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 32 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 32 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression DIVIDE expression .)
    RSQUARE         reduce using rule 32 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! TIMES           [ shift and go to state 48 ]
  ! DIVIDE          [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! GREATER         [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 70

    (33) expression -> expression LESS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    LESS            reduce using rule 33 (expression -> expression LESS expression .)
    GREATER         reduce using rule 33 (expression -> expression LESS expression .)
    AND             reduce using rule 33 (expression -> expression LESS expression .)
    OR              reduce using rule 33 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 33 (expression -> expression LESS expression .)
    COMMA           reduce using rule 33 (expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression LESS expression .)
    RSQUARE         reduce using rule 33 (expression -> expression LESS expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 33 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression LESS expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression LESS expression .) ]
  ! LESS            [ shift and go to state 50 ]
  ! GREATER         [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 71

    (34) expression -> expression GREATER expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    LESS            reduce using rule 34 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 34 (expression -> expression GREATER expression .)
    AND             reduce using rule 34 (expression -> expression GREATER expression .)
    OR              reduce using rule 34 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 34 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 34 (expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression GREATER expression .)
    RSQUARE         reduce using rule 34 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 34 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression GREATER expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression GREATER expression .) ]
  ! LESS            [ shift and go to state 50 ]
  ! GREATER         [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 72

    (35) expression -> expression AND expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    AND             reduce using rule 35 (expression -> expression AND expression .)
    OR              reduce using rule 35 (expression -> expression AND expression .)
    RPAREN          reduce using rule 35 (expression -> expression AND expression .)
    COMMA           reduce using rule 35 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression AND expression .)
    RSQUARE         reduce using rule 35 (expression -> expression AND expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    LESS            shift and go to state 50
    GREATER         shift and go to state 51

  ! PLUS            [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 73

    (36) expression -> expression OR expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    OR              reduce using rule 36 (expression -> expression OR expression .)
    RPAREN          reduce using rule 36 (expression -> expression OR expression .)
    COMMA           reduce using rule 36 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 36 (expression -> expression OR expression .)
    RSQUARE         reduce using rule 36 (expression -> expression OR expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    LESS            shift and go to state 50
    GREATER         shift and go to state 51
    AND             shift and go to state 52

  ! PLUS            [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 53 ]


state 74

    (15) expression -> LSQUARE expression_list RSQUARE .

    PLUS            reduce using rule 15 (expression -> LSQUARE expression_list RSQUARE .)
    MINUS           reduce using rule 15 (expression -> LSQUARE expression_list RSQUARE .)
    TIMES           reduce using rule 15 (expression -> LSQUARE expression_list RSQUARE .)
    DIVIDE          reduce using rule 15 (expression -> LSQUARE expression_list RSQUARE .)
    LESS            reduce using rule 15 (expression -> LSQUARE expression_list RSQUARE .)
    GREATER         reduce using rule 15 (expression -> LSQUARE expression_list RSQUARE .)
    AND             reduce using rule 15 (expression -> LSQUARE expression_list RSQUARE .)
    OR              reduce using rule 15 (expression -> LSQUARE expression_list RSQUARE .)
    RPAREN          reduce using rule 15 (expression -> LSQUARE expression_list RSQUARE .)
    COMMA           reduce using rule 15 (expression -> LSQUARE expression_list RSQUARE .)
    SEMICOLON       reduce using rule 15 (expression -> LSQUARE expression_list RSQUARE .)
    RSQUARE         reduce using rule 15 (expression -> LSQUARE expression_list RSQUARE .)


state 75

    (12) statement_append -> ID PERIOD APPEND LPAREN expression . RPAREN SEMICOLON
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    RPAREN          shift and go to state 82
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    LESS            shift and go to state 50
    GREATER         shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 76

    (24) statement_if -> IF LPAREN expression RPAREN statement .
    (25) statement_if -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    PRINT           reduce using rule 24 (statement_if -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 24 (statement_if -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 24 (statement_if -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 24 (statement_if -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 24 (statement_if -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 24 (statement_if -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 24 (statement_if -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 24 (statement_if -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 83

  ! ELSE            [ reduce using rule 24 (statement_if -> IF LPAREN expression RPAREN statement .) ]


state 77

    (26) statement_while -> WHILE LPAREN expression RPAREN statement .

    PRINT           reduce using rule 26 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 26 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 26 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 26 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 26 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 26 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 26 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 26 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 26 (statement_while -> WHILE LPAREN expression RPAREN statement .)


state 78

    (27) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt . SEMICOLON assign_expression_opt RPAREN statement

    SEMICOLON       shift and go to state 84


state 79

    (21) expression_opt -> expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    SEMICOLON       reduce using rule 21 (expression_opt -> expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    LESS            shift and go to state 50
    GREATER         shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 80

    (22) expression_opt -> empty .

    SEMICOLON       reduce using rule 22 (expression_opt -> empty .)


state 81

    (18) assign_expression -> ID EQUALS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression

    SEMICOLON       reduce using rule 18 (assign_expression -> ID EQUALS expression .)
    RPAREN          reduce using rule 18 (assign_expression -> ID EQUALS expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    LESS            shift and go to state 50
    GREATER         shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 82

    (12) statement_append -> ID PERIOD APPEND LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 85


state 83

    (25) statement_if -> IF LPAREN expression RPAREN statement ELSE . statement
    (4) statement -> . statement_print
    (5) statement -> . statement_assign
    (6) statement -> . statement_if
    (7) statement -> . statement_while
    (8) statement -> . statement_for
    (9) statement -> . statement_append
    (10) statement -> . block
    (11) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (17) statement_assign -> . ID EQUALS expression SEMICOLON
    (24) statement_if -> . IF LPAREN expression RPAREN statement
    (25) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (26) statement_while -> . WHILE LPAREN expression RPAREN statement
    (27) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (12) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (28) block -> . LBRACE statement_list RBRACE

    PRINT           shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    LBRACE          shift and go to state 16

    statement                      shift and go to state 86
    statement_print                shift and go to state 4
    statement_assign               shift and go to state 5
    statement_if                   shift and go to state 6
    statement_while                shift and go to state 7
    statement_for                  shift and go to state 8
    statement_append               shift and go to state 9
    block                          shift and go to state 10

state 84

    (27) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON . assign_expression_opt RPAREN statement
    (19) assign_expression_opt -> . assign_expression
    (20) assign_expression_opt -> . empty
    (18) assign_expression -> . ID EQUALS expression
    (23) empty -> .

    ID              shift and go to state 41
    RPAREN          reduce using rule 23 (empty -> .)

    assign_expression_opt          shift and go to state 87
    assign_expression              shift and go to state 39
    empty                          shift and go to state 40

state 85

    (12) statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .

    PRINT           reduce using rule 12 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 12 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 12 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 12 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 12 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 12 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 12 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 12 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 12 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)


state 86

    (25) statement_if -> IF LPAREN expression RPAREN statement ELSE statement .

    PRINT           reduce using rule 25 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 25 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 25 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 25 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 25 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 25 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    $end            reduce using rule 25 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 25 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 25 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)


state 87

    (27) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt . RPAREN statement

    RPAREN          shift and go to state 88


state 88

    (27) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN . statement
    (4) statement -> . statement_print
    (5) statement -> . statement_assign
    (6) statement -> . statement_if
    (7) statement -> . statement_while
    (8) statement -> . statement_for
    (9) statement -> . statement_append
    (10) statement -> . block
    (11) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (17) statement_assign -> . ID EQUALS expression SEMICOLON
    (24) statement_if -> . IF LPAREN expression RPAREN statement
    (25) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (26) statement_while -> . WHILE LPAREN expression RPAREN statement
    (27) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (12) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (28) block -> . LBRACE statement_list RBRACE

    PRINT           shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FOR             shift and go to state 15
    LBRACE          shift and go to state 16

    statement                      shift and go to state 89
    statement_print                shift and go to state 4
    statement_assign               shift and go to state 5
    statement_if                   shift and go to state 6
    statement_while                shift and go to state 7
    statement_for                  shift and go to state 8
    statement_append               shift and go to state 9
    block                          shift and go to state 10

state 89

    (27) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .

    PRINT           reduce using rule 27 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    ID              reduce using rule 27 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    IF              reduce using rule 27 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    WHILE           reduce using rule 27 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    FOR             reduce using rule 27 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    LBRACE          reduce using rule 27 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    $end            reduce using rule 27 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    RBRACE          reduce using rule 27 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    ELSE            reduce using rule 27 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 76 resolved as shift
