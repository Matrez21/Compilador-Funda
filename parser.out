Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     statement -> FUNC ID LPAREN param_list RPAREN block
Rule 2     expression -> ID LPAREN expression_list RPAREN
Rule 3     statement -> RETURN expression SEMICOLON
Rule 4     param_list -> param_list COMMA ID
Rule 5     param_list -> ID
Rule 6     param_list -> empty
Rule 7     program -> statement_list
Rule 8     statement_list -> statement_list statement
Rule 9     statement_list -> statement
Rule 10    statement -> statement_function
Rule 11    statement -> statement_return
Rule 12    statement -> statement_print
Rule 13    statement -> statement_assign
Rule 14    statement -> statement_if
Rule 15    statement -> statement_while
Rule 16    statement -> statement_for
Rule 17    statement -> statement_append
Rule 18    statement -> block
Rule 19    statement_function -> FUNC ID LPAREN param_list RPAREN block
Rule 20    statement_return -> RETURN expression SEMICOLON
Rule 21    statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON
Rule 22    statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
Rule 23    statement -> BREAK SEMICOLON
Rule 24    expression_list -> expression_list COMMA expression
Rule 25    expression_list -> expression
Rule 26    expression -> LSQUARE expression_list RSQUARE
Rule 27    expression -> LBRACE RBRACE
Rule 28    statement_assign -> ID EQUALS expression SEMICOLON
Rule 29    assign_expression -> ID EQUALS expression
Rule 30    assign_expression_opt -> assign_expression
Rule 31    assign_expression_opt -> empty
Rule 32    expression_opt -> expression
Rule 33    expression_opt -> empty
Rule 34    empty -> <empty>
Rule 35    statement_if -> IF LPAREN expression RPAREN statement
Rule 36    statement_if -> IF LPAREN expression RPAREN statement ELSE statement
Rule 37    statement_while -> WHILE LPAREN expression RPAREN statement
Rule 38    statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
Rule 39    block -> LBRACE statement_list RBRACE
Rule 40    expression -> expression PLUS expression
Rule 41    expression -> expression MINUS expression
Rule 42    expression -> expression TIMES expression
Rule 43    expression -> expression DIVIDE expression
Rule 44    expression -> expression LESS expression
Rule 45    expression -> expression GREATER expression
Rule 46    expression -> expression EQUALS_EQUALS expression
Rule 47    expression -> expression AND expression
Rule 48    expression -> expression OR expression
Rule 49    expression -> NOT expression
Rule 50    expression -> LPAREN expression RPAREN
Rule 51    expression -> NUMBER
Rule 52    expression -> STRING
Rule 53    expression -> ID

Terminals, with rules where they appear

AND                  : 47
APPEND               : 22
BREAK                : 23
COMMA                : 4 24
DIVIDE               : 43
ELSE                 : 36
EQUALS               : 28 29
EQUALS_EQUALS        : 46
FOR                  : 38
FUNC                 : 1 19
GREATER              : 45
ID                   : 1 2 4 5 19 22 28 29 53
IF                   : 35 36
LBRACE               : 27 39
LESS                 : 44
LPAREN               : 1 2 19 21 22 35 36 37 38 50
LSQUARE              : 26
MINUS                : 41
NOT                  : 49
NUMBER               : 51
OR                   : 48
PERIOD               : 22
PLUS                 : 40
PRINT                : 21
RBRACE               : 27 39
RETURN               : 3 20
RPAREN               : 1 2 19 21 22 35 36 37 38 50
RSQUARE              : 26
SEMICOLON            : 3 20 21 22 23 28 38 38
STRING               : 52
TIMES                : 42
WHILE                : 37
error                : 

Nonterminals, with rules where they appear

assign_expression    : 30
assign_expression_opt : 38 38
block                : 1 18 19
empty                : 6 31 33
expression           : 3 20 22 24 25 28 29 32 35 36 37 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 50
expression_list      : 2 21 24 26
expression_opt       : 38
param_list           : 1 4 19
program              : 0
statement            : 8 9 35 36 36 37 38
statement_append     : 17
statement_assign     : 13
statement_for        : 16
statement_function   : 10
statement_if         : 14
statement_list       : 7 8 39
statement_print      : 12
statement_return     : 11
statement_while      : 15

Parsing method: LALR

state 0

    (0) S' -> . program
    (7) program -> . statement_list
    (8) statement_list -> . statement_list statement
    (9) statement_list -> . statement
    (1) statement -> . FUNC ID LPAREN param_list RPAREN block
    (3) statement -> . RETURN expression SEMICOLON
    (10) statement -> . statement_function
    (11) statement -> . statement_return
    (12) statement -> . statement_print
    (13) statement -> . statement_assign
    (14) statement -> . statement_if
    (15) statement -> . statement_while
    (16) statement -> . statement_for
    (17) statement -> . statement_append
    (18) statement -> . block
    (23) statement -> . BREAK SEMICOLON
    (19) statement_function -> . FUNC ID LPAREN param_list RPAREN block
    (20) statement_return -> . RETURN expression SEMICOLON
    (21) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (28) statement_assign -> . ID EQUALS expression SEMICOLON
    (35) statement_if -> . IF LPAREN expression RPAREN statement
    (36) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (37) statement_while -> . WHILE LPAREN expression RPAREN statement
    (38) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (22) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (39) block -> . LBRACE statement_list RBRACE

    FUNC            shift and go to state 4
    RETURN          shift and go to state 7
    BREAK           shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 5
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    LBRACE          shift and go to state 21

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    block                          shift and go to state 6
    statement_function             shift and go to state 8
    statement_return               shift and go to state 9
    statement_print                shift and go to state 10
    statement_assign               shift and go to state 11
    statement_if                   shift and go to state 12
    statement_while                shift and go to state 13
    statement_for                  shift and go to state 14
    statement_append               shift and go to state 15

state 1

    (0) S' -> program .



state 2

    (7) program -> statement_list .
    (8) statement_list -> statement_list . statement
    (1) statement -> . FUNC ID LPAREN param_list RPAREN block
    (3) statement -> . RETURN expression SEMICOLON
    (10) statement -> . statement_function
    (11) statement -> . statement_return
    (12) statement -> . statement_print
    (13) statement -> . statement_assign
    (14) statement -> . statement_if
    (15) statement -> . statement_while
    (16) statement -> . statement_for
    (17) statement -> . statement_append
    (18) statement -> . block
    (23) statement -> . BREAK SEMICOLON
    (19) statement_function -> . FUNC ID LPAREN param_list RPAREN block
    (20) statement_return -> . RETURN expression SEMICOLON
    (21) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (28) statement_assign -> . ID EQUALS expression SEMICOLON
    (35) statement_if -> . IF LPAREN expression RPAREN statement
    (36) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (37) statement_while -> . WHILE LPAREN expression RPAREN statement
    (38) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (22) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (39) block -> . LBRACE statement_list RBRACE

    $end            reduce using rule 7 (program -> statement_list .)
    FUNC            shift and go to state 4
    RETURN          shift and go to state 7
    BREAK           shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 5
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    LBRACE          shift and go to state 21

    statement                      shift and go to state 22
    block                          shift and go to state 6
    statement_function             shift and go to state 8
    statement_return               shift and go to state 9
    statement_print                shift and go to state 10
    statement_assign               shift and go to state 11
    statement_if                   shift and go to state 12
    statement_while                shift and go to state 13
    statement_for                  shift and go to state 14
    statement_append               shift and go to state 15

state 3

    (9) statement_list -> statement .

    FUNC            reduce using rule 9 (statement_list -> statement .)
    RETURN          reduce using rule 9 (statement_list -> statement .)
    BREAK           reduce using rule 9 (statement_list -> statement .)
    PRINT           reduce using rule 9 (statement_list -> statement .)
    ID              reduce using rule 9 (statement_list -> statement .)
    IF              reduce using rule 9 (statement_list -> statement .)
    WHILE           reduce using rule 9 (statement_list -> statement .)
    FOR             reduce using rule 9 (statement_list -> statement .)
    LBRACE          reduce using rule 9 (statement_list -> statement .)
    $end            reduce using rule 9 (statement_list -> statement .)
    RBRACE          reduce using rule 9 (statement_list -> statement .)


state 4

    (1) statement -> FUNC . ID LPAREN param_list RPAREN block
    (19) statement_function -> FUNC . ID LPAREN param_list RPAREN block

    ID              shift and go to state 23


state 5

    (28) statement_assign -> ID . EQUALS expression SEMICOLON
    (22) statement_append -> ID . PERIOD APPEND LPAREN expression RPAREN SEMICOLON

    EQUALS          shift and go to state 24
    PERIOD          shift and go to state 25


state 6

    (18) statement -> block .

    FUNC            reduce using rule 18 (statement -> block .)
    RETURN          reduce using rule 18 (statement -> block .)
    BREAK           reduce using rule 18 (statement -> block .)
    PRINT           reduce using rule 18 (statement -> block .)
    ID              reduce using rule 18 (statement -> block .)
    IF              reduce using rule 18 (statement -> block .)
    WHILE           reduce using rule 18 (statement -> block .)
    FOR             reduce using rule 18 (statement -> block .)
    LBRACE          reduce using rule 18 (statement -> block .)
    $end            reduce using rule 18 (statement -> block .)
    RBRACE          reduce using rule 18 (statement -> block .)
    ELSE            reduce using rule 18 (statement -> block .)


state 7

    (3) statement -> RETURN . expression SEMICOLON
    (20) statement_return -> RETURN . expression SEMICOLON
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 26

state 8

    (10) statement -> statement_function .

    FUNC            reduce using rule 10 (statement -> statement_function .)
    RETURN          reduce using rule 10 (statement -> statement_function .)
    BREAK           reduce using rule 10 (statement -> statement_function .)
    PRINT           reduce using rule 10 (statement -> statement_function .)
    ID              reduce using rule 10 (statement -> statement_function .)
    IF              reduce using rule 10 (statement -> statement_function .)
    WHILE           reduce using rule 10 (statement -> statement_function .)
    FOR             reduce using rule 10 (statement -> statement_function .)
    LBRACE          reduce using rule 10 (statement -> statement_function .)
    $end            reduce using rule 10 (statement -> statement_function .)
    RBRACE          reduce using rule 10 (statement -> statement_function .)
    ELSE            reduce using rule 10 (statement -> statement_function .)


state 9

    (11) statement -> statement_return .

    FUNC            reduce using rule 11 (statement -> statement_return .)
    RETURN          reduce using rule 11 (statement -> statement_return .)
    BREAK           reduce using rule 11 (statement -> statement_return .)
    PRINT           reduce using rule 11 (statement -> statement_return .)
    ID              reduce using rule 11 (statement -> statement_return .)
    IF              reduce using rule 11 (statement -> statement_return .)
    WHILE           reduce using rule 11 (statement -> statement_return .)
    FOR             reduce using rule 11 (statement -> statement_return .)
    LBRACE          reduce using rule 11 (statement -> statement_return .)
    $end            reduce using rule 11 (statement -> statement_return .)
    RBRACE          reduce using rule 11 (statement -> statement_return .)
    ELSE            reduce using rule 11 (statement -> statement_return .)


state 10

    (12) statement -> statement_print .

    FUNC            reduce using rule 12 (statement -> statement_print .)
    RETURN          reduce using rule 12 (statement -> statement_print .)
    BREAK           reduce using rule 12 (statement -> statement_print .)
    PRINT           reduce using rule 12 (statement -> statement_print .)
    ID              reduce using rule 12 (statement -> statement_print .)
    IF              reduce using rule 12 (statement -> statement_print .)
    WHILE           reduce using rule 12 (statement -> statement_print .)
    FOR             reduce using rule 12 (statement -> statement_print .)
    LBRACE          reduce using rule 12 (statement -> statement_print .)
    $end            reduce using rule 12 (statement -> statement_print .)
    RBRACE          reduce using rule 12 (statement -> statement_print .)
    ELSE            reduce using rule 12 (statement -> statement_print .)


state 11

    (13) statement -> statement_assign .

    FUNC            reduce using rule 13 (statement -> statement_assign .)
    RETURN          reduce using rule 13 (statement -> statement_assign .)
    BREAK           reduce using rule 13 (statement -> statement_assign .)
    PRINT           reduce using rule 13 (statement -> statement_assign .)
    ID              reduce using rule 13 (statement -> statement_assign .)
    IF              reduce using rule 13 (statement -> statement_assign .)
    WHILE           reduce using rule 13 (statement -> statement_assign .)
    FOR             reduce using rule 13 (statement -> statement_assign .)
    LBRACE          reduce using rule 13 (statement -> statement_assign .)
    $end            reduce using rule 13 (statement -> statement_assign .)
    RBRACE          reduce using rule 13 (statement -> statement_assign .)
    ELSE            reduce using rule 13 (statement -> statement_assign .)


state 12

    (14) statement -> statement_if .

    FUNC            reduce using rule 14 (statement -> statement_if .)
    RETURN          reduce using rule 14 (statement -> statement_if .)
    BREAK           reduce using rule 14 (statement -> statement_if .)
    PRINT           reduce using rule 14 (statement -> statement_if .)
    ID              reduce using rule 14 (statement -> statement_if .)
    IF              reduce using rule 14 (statement -> statement_if .)
    WHILE           reduce using rule 14 (statement -> statement_if .)
    FOR             reduce using rule 14 (statement -> statement_if .)
    LBRACE          reduce using rule 14 (statement -> statement_if .)
    $end            reduce using rule 14 (statement -> statement_if .)
    RBRACE          reduce using rule 14 (statement -> statement_if .)
    ELSE            reduce using rule 14 (statement -> statement_if .)


state 13

    (15) statement -> statement_while .

    FUNC            reduce using rule 15 (statement -> statement_while .)
    RETURN          reduce using rule 15 (statement -> statement_while .)
    BREAK           reduce using rule 15 (statement -> statement_while .)
    PRINT           reduce using rule 15 (statement -> statement_while .)
    ID              reduce using rule 15 (statement -> statement_while .)
    IF              reduce using rule 15 (statement -> statement_while .)
    WHILE           reduce using rule 15 (statement -> statement_while .)
    FOR             reduce using rule 15 (statement -> statement_while .)
    LBRACE          reduce using rule 15 (statement -> statement_while .)
    $end            reduce using rule 15 (statement -> statement_while .)
    RBRACE          reduce using rule 15 (statement -> statement_while .)
    ELSE            reduce using rule 15 (statement -> statement_while .)


state 14

    (16) statement -> statement_for .

    FUNC            reduce using rule 16 (statement -> statement_for .)
    RETURN          reduce using rule 16 (statement -> statement_for .)
    BREAK           reduce using rule 16 (statement -> statement_for .)
    PRINT           reduce using rule 16 (statement -> statement_for .)
    ID              reduce using rule 16 (statement -> statement_for .)
    IF              reduce using rule 16 (statement -> statement_for .)
    WHILE           reduce using rule 16 (statement -> statement_for .)
    FOR             reduce using rule 16 (statement -> statement_for .)
    LBRACE          reduce using rule 16 (statement -> statement_for .)
    $end            reduce using rule 16 (statement -> statement_for .)
    RBRACE          reduce using rule 16 (statement -> statement_for .)
    ELSE            reduce using rule 16 (statement -> statement_for .)


state 15

    (17) statement -> statement_append .

    FUNC            reduce using rule 17 (statement -> statement_append .)
    RETURN          reduce using rule 17 (statement -> statement_append .)
    BREAK           reduce using rule 17 (statement -> statement_append .)
    PRINT           reduce using rule 17 (statement -> statement_append .)
    ID              reduce using rule 17 (statement -> statement_append .)
    IF              reduce using rule 17 (statement -> statement_append .)
    WHILE           reduce using rule 17 (statement -> statement_append .)
    FOR             reduce using rule 17 (statement -> statement_append .)
    LBRACE          reduce using rule 17 (statement -> statement_append .)
    $end            reduce using rule 17 (statement -> statement_append .)
    RBRACE          reduce using rule 17 (statement -> statement_append .)
    ELSE            reduce using rule 17 (statement -> statement_append .)


state 16

    (23) statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 34


state 17

    (21) statement_print -> PRINT . LPAREN expression_list RPAREN SEMICOLON

    LPAREN          shift and go to state 35


state 18

    (35) statement_if -> IF . LPAREN expression RPAREN statement
    (36) statement_if -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 36


state 19

    (37) statement_while -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 37


state 20

    (38) statement_for -> FOR . LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement

    LPAREN          shift and go to state 38


state 21

    (39) block -> LBRACE . statement_list RBRACE
    (8) statement_list -> . statement_list statement
    (9) statement_list -> . statement
    (1) statement -> . FUNC ID LPAREN param_list RPAREN block
    (3) statement -> . RETURN expression SEMICOLON
    (10) statement -> . statement_function
    (11) statement -> . statement_return
    (12) statement -> . statement_print
    (13) statement -> . statement_assign
    (14) statement -> . statement_if
    (15) statement -> . statement_while
    (16) statement -> . statement_for
    (17) statement -> . statement_append
    (18) statement -> . block
    (23) statement -> . BREAK SEMICOLON
    (19) statement_function -> . FUNC ID LPAREN param_list RPAREN block
    (20) statement_return -> . RETURN expression SEMICOLON
    (21) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (28) statement_assign -> . ID EQUALS expression SEMICOLON
    (35) statement_if -> . IF LPAREN expression RPAREN statement
    (36) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (37) statement_while -> . WHILE LPAREN expression RPAREN statement
    (38) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (22) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (39) block -> . LBRACE statement_list RBRACE

    FUNC            shift and go to state 4
    RETURN          shift and go to state 7
    BREAK           shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 5
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    LBRACE          shift and go to state 21

    statement_list                 shift and go to state 39
    statement                      shift and go to state 3
    block                          shift and go to state 6
    statement_function             shift and go to state 8
    statement_return               shift and go to state 9
    statement_print                shift and go to state 10
    statement_assign               shift and go to state 11
    statement_if                   shift and go to state 12
    statement_while                shift and go to state 13
    statement_for                  shift and go to state 14
    statement_append               shift and go to state 15

state 22

    (8) statement_list -> statement_list statement .

    FUNC            reduce using rule 8 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 8 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 8 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 8 (statement_list -> statement_list statement .)
    ID              reduce using rule 8 (statement_list -> statement_list statement .)
    IF              reduce using rule 8 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 8 (statement_list -> statement_list statement .)
    FOR             reduce using rule 8 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 8 (statement_list -> statement_list statement .)
    $end            reduce using rule 8 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 8 (statement_list -> statement_list statement .)


state 23

    (1) statement -> FUNC ID . LPAREN param_list RPAREN block
    (19) statement_function -> FUNC ID . LPAREN param_list RPAREN block

    LPAREN          shift and go to state 40


state 24

    (28) statement_assign -> ID EQUALS . expression SEMICOLON
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 41

state 25

    (22) statement_append -> ID PERIOD . APPEND LPAREN expression RPAREN SEMICOLON

    APPEND          shift and go to state 42


state 26

    (3) statement -> RETURN expression . SEMICOLON
    (20) statement_return -> RETURN expression . SEMICOLON
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    SEMICOLON       shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47
    LESS            shift and go to state 48
    GREATER         shift and go to state 49
    EQUALS_EQUALS   shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 27

    (2) expression -> ID . LPAREN expression_list RPAREN
    (53) expression -> ID .

    LPAREN          shift and go to state 53
    SEMICOLON       reduce using rule 53 (expression -> ID .)
    PLUS            reduce using rule 53 (expression -> ID .)
    MINUS           reduce using rule 53 (expression -> ID .)
    TIMES           reduce using rule 53 (expression -> ID .)
    DIVIDE          reduce using rule 53 (expression -> ID .)
    LESS            reduce using rule 53 (expression -> ID .)
    GREATER         reduce using rule 53 (expression -> ID .)
    EQUALS_EQUALS   reduce using rule 53 (expression -> ID .)
    AND             reduce using rule 53 (expression -> ID .)
    OR              reduce using rule 53 (expression -> ID .)
    RPAREN          reduce using rule 53 (expression -> ID .)
    RSQUARE         reduce using rule 53 (expression -> ID .)
    COMMA           reduce using rule 53 (expression -> ID .)


state 28

    (50) expression -> LPAREN . expression RPAREN
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 54

state 29

    (26) expression -> LSQUARE . expression_list RSQUARE
    (24) expression_list -> . expression_list COMMA expression
    (25) expression_list -> . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression_list                shift and go to state 55
    expression                     shift and go to state 56

state 30

    (27) expression -> LBRACE . RBRACE

    RBRACE          shift and go to state 57


state 31

    (49) expression -> NOT . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 58

state 32

    (51) expression -> NUMBER .

    SEMICOLON       reduce using rule 51 (expression -> NUMBER .)
    PLUS            reduce using rule 51 (expression -> NUMBER .)
    MINUS           reduce using rule 51 (expression -> NUMBER .)
    TIMES           reduce using rule 51 (expression -> NUMBER .)
    DIVIDE          reduce using rule 51 (expression -> NUMBER .)
    LESS            reduce using rule 51 (expression -> NUMBER .)
    GREATER         reduce using rule 51 (expression -> NUMBER .)
    EQUALS_EQUALS   reduce using rule 51 (expression -> NUMBER .)
    AND             reduce using rule 51 (expression -> NUMBER .)
    OR              reduce using rule 51 (expression -> NUMBER .)
    RPAREN          reduce using rule 51 (expression -> NUMBER .)
    RSQUARE         reduce using rule 51 (expression -> NUMBER .)
    COMMA           reduce using rule 51 (expression -> NUMBER .)


state 33

    (52) expression -> STRING .

    SEMICOLON       reduce using rule 52 (expression -> STRING .)
    PLUS            reduce using rule 52 (expression -> STRING .)
    MINUS           reduce using rule 52 (expression -> STRING .)
    TIMES           reduce using rule 52 (expression -> STRING .)
    DIVIDE          reduce using rule 52 (expression -> STRING .)
    LESS            reduce using rule 52 (expression -> STRING .)
    GREATER         reduce using rule 52 (expression -> STRING .)
    EQUALS_EQUALS   reduce using rule 52 (expression -> STRING .)
    AND             reduce using rule 52 (expression -> STRING .)
    OR              reduce using rule 52 (expression -> STRING .)
    RPAREN          reduce using rule 52 (expression -> STRING .)
    RSQUARE         reduce using rule 52 (expression -> STRING .)
    COMMA           reduce using rule 52 (expression -> STRING .)


state 34

    (23) statement -> BREAK SEMICOLON .

    FUNC            reduce using rule 23 (statement -> BREAK SEMICOLON .)
    RETURN          reduce using rule 23 (statement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 23 (statement -> BREAK SEMICOLON .)
    PRINT           reduce using rule 23 (statement -> BREAK SEMICOLON .)
    ID              reduce using rule 23 (statement -> BREAK SEMICOLON .)
    IF              reduce using rule 23 (statement -> BREAK SEMICOLON .)
    WHILE           reduce using rule 23 (statement -> BREAK SEMICOLON .)
    FOR             reduce using rule 23 (statement -> BREAK SEMICOLON .)
    LBRACE          reduce using rule 23 (statement -> BREAK SEMICOLON .)
    $end            reduce using rule 23 (statement -> BREAK SEMICOLON .)
    RBRACE          reduce using rule 23 (statement -> BREAK SEMICOLON .)
    ELSE            reduce using rule 23 (statement -> BREAK SEMICOLON .)


state 35

    (21) statement_print -> PRINT LPAREN . expression_list RPAREN SEMICOLON
    (24) expression_list -> . expression_list COMMA expression
    (25) expression_list -> . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression_list                shift and go to state 59
    expression                     shift and go to state 56

state 36

    (35) statement_if -> IF LPAREN . expression RPAREN statement
    (36) statement_if -> IF LPAREN . expression RPAREN statement ELSE statement
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 60

state 37

    (37) statement_while -> WHILE LPAREN . expression RPAREN statement
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 61

state 38

    (38) statement_for -> FOR LPAREN . assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (30) assign_expression_opt -> . assign_expression
    (31) assign_expression_opt -> . empty
    (29) assign_expression -> . ID EQUALS expression
    (34) empty -> .

    ID              shift and go to state 65
    SEMICOLON       reduce using rule 34 (empty -> .)

    assign_expression_opt          shift and go to state 62
    assign_expression              shift and go to state 63
    empty                          shift and go to state 64

state 39

    (39) block -> LBRACE statement_list . RBRACE
    (8) statement_list -> statement_list . statement
    (1) statement -> . FUNC ID LPAREN param_list RPAREN block
    (3) statement -> . RETURN expression SEMICOLON
    (10) statement -> . statement_function
    (11) statement -> . statement_return
    (12) statement -> . statement_print
    (13) statement -> . statement_assign
    (14) statement -> . statement_if
    (15) statement -> . statement_while
    (16) statement -> . statement_for
    (17) statement -> . statement_append
    (18) statement -> . block
    (23) statement -> . BREAK SEMICOLON
    (19) statement_function -> . FUNC ID LPAREN param_list RPAREN block
    (20) statement_return -> . RETURN expression SEMICOLON
    (21) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (28) statement_assign -> . ID EQUALS expression SEMICOLON
    (35) statement_if -> . IF LPAREN expression RPAREN statement
    (36) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (37) statement_while -> . WHILE LPAREN expression RPAREN statement
    (38) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (22) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (39) block -> . LBRACE statement_list RBRACE

    RBRACE          shift and go to state 66
    FUNC            shift and go to state 4
    RETURN          shift and go to state 7
    BREAK           shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 5
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    LBRACE          shift and go to state 21

    statement                      shift and go to state 22
    block                          shift and go to state 6
    statement_function             shift and go to state 8
    statement_return               shift and go to state 9
    statement_print                shift and go to state 10
    statement_assign               shift and go to state 11
    statement_if                   shift and go to state 12
    statement_while                shift and go to state 13
    statement_for                  shift and go to state 14
    statement_append               shift and go to state 15

state 40

    (1) statement -> FUNC ID LPAREN . param_list RPAREN block
    (19) statement_function -> FUNC ID LPAREN . param_list RPAREN block
    (4) param_list -> . param_list COMMA ID
    (5) param_list -> . ID
    (6) param_list -> . empty
    (34) empty -> .

    ID              shift and go to state 67
    RPAREN          reduce using rule 34 (empty -> .)
    COMMA           reduce using rule 34 (empty -> .)

    param_list                     shift and go to state 68
    empty                          shift and go to state 69

state 41

    (28) statement_assign -> ID EQUALS expression . SEMICOLON
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    SEMICOLON       shift and go to state 70
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47
    LESS            shift and go to state 48
    GREATER         shift and go to state 49
    EQUALS_EQUALS   shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 42

    (22) statement_append -> ID PERIOD APPEND . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 71


state 43

    (3) statement -> RETURN expression SEMICOLON .
    (20) statement_return -> RETURN expression SEMICOLON .

  ! reduce/reduce conflict for FUNC resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for RETURN resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for BREAK resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for PRINT resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for ID resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for IF resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for WHILE resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for LBRACE resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for $end resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for RBRACE resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
  ! reduce/reduce conflict for ELSE resolved using rule 3 (statement -> RETURN expression SEMICOLON .)
    FUNC            reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    BREAK           reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    ID              reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    LBRACE          reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 3 (statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 3 (statement -> RETURN expression SEMICOLON .)

  ! FUNC            [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! RETURN          [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! BREAK           [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! PRINT           [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! ID              [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! IF              [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! WHILE           [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! FOR             [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! LBRACE          [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! $end            [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! RBRACE          [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]
  ! ELSE            [ reduce using rule 20 (statement_return -> RETURN expression SEMICOLON .) ]


state 44

    (40) expression -> expression PLUS . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 72

state 45

    (41) expression -> expression MINUS . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 73

state 46

    (42) expression -> expression TIMES . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 74

state 47

    (43) expression -> expression DIVIDE . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 75

state 48

    (44) expression -> expression LESS . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 76

state 49

    (45) expression -> expression GREATER . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 77

state 50

    (46) expression -> expression EQUALS_EQUALS . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 78

state 51

    (47) expression -> expression AND . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 79

state 52

    (48) expression -> expression OR . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 80

state 53

    (2) expression -> ID LPAREN . expression_list RPAREN
    (24) expression_list -> . expression_list COMMA expression
    (25) expression_list -> . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression_list                shift and go to state 81
    expression                     shift and go to state 56

state 54

    (50) expression -> LPAREN expression . RPAREN
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    RPAREN          shift and go to state 82
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47
    LESS            shift and go to state 48
    GREATER         shift and go to state 49
    EQUALS_EQUALS   shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 55

    (26) expression -> LSQUARE expression_list . RSQUARE
    (24) expression_list -> expression_list . COMMA expression

    RSQUARE         shift and go to state 83
    COMMA           shift and go to state 84


state 56

    (25) expression_list -> expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    RSQUARE         reduce using rule 25 (expression_list -> expression .)
    COMMA           reduce using rule 25 (expression_list -> expression .)
    RPAREN          reduce using rule 25 (expression_list -> expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47
    LESS            shift and go to state 48
    GREATER         shift and go to state 49
    EQUALS_EQUALS   shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 57

    (27) expression -> LBRACE RBRACE .

    SEMICOLON       reduce using rule 27 (expression -> LBRACE RBRACE .)
    PLUS            reduce using rule 27 (expression -> LBRACE RBRACE .)
    MINUS           reduce using rule 27 (expression -> LBRACE RBRACE .)
    TIMES           reduce using rule 27 (expression -> LBRACE RBRACE .)
    DIVIDE          reduce using rule 27 (expression -> LBRACE RBRACE .)
    LESS            reduce using rule 27 (expression -> LBRACE RBRACE .)
    GREATER         reduce using rule 27 (expression -> LBRACE RBRACE .)
    EQUALS_EQUALS   reduce using rule 27 (expression -> LBRACE RBRACE .)
    AND             reduce using rule 27 (expression -> LBRACE RBRACE .)
    OR              reduce using rule 27 (expression -> LBRACE RBRACE .)
    RPAREN          reduce using rule 27 (expression -> LBRACE RBRACE .)
    RSQUARE         reduce using rule 27 (expression -> LBRACE RBRACE .)
    COMMA           reduce using rule 27 (expression -> LBRACE RBRACE .)


state 58

    (49) expression -> NOT expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    SEMICOLON       reduce using rule 49 (expression -> NOT expression .)
    PLUS            reduce using rule 49 (expression -> NOT expression .)
    MINUS           reduce using rule 49 (expression -> NOT expression .)
    TIMES           reduce using rule 49 (expression -> NOT expression .)
    DIVIDE          reduce using rule 49 (expression -> NOT expression .)
    LESS            reduce using rule 49 (expression -> NOT expression .)
    GREATER         reduce using rule 49 (expression -> NOT expression .)
    EQUALS_EQUALS   reduce using rule 49 (expression -> NOT expression .)
    AND             reduce using rule 49 (expression -> NOT expression .)
    OR              reduce using rule 49 (expression -> NOT expression .)
    RPAREN          reduce using rule 49 (expression -> NOT expression .)
    RSQUARE         reduce using rule 49 (expression -> NOT expression .)
    COMMA           reduce using rule 49 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 45 ]
  ! TIMES           [ shift and go to state 46 ]
  ! DIVIDE          [ shift and go to state 47 ]
  ! LESS            [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! EQUALS_EQUALS   [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 59

    (21) statement_print -> PRINT LPAREN expression_list . RPAREN SEMICOLON
    (24) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 85
    COMMA           shift and go to state 84


state 60

    (35) statement_if -> IF LPAREN expression . RPAREN statement
    (36) statement_if -> IF LPAREN expression . RPAREN statement ELSE statement
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    RPAREN          shift and go to state 86
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47
    LESS            shift and go to state 48
    GREATER         shift and go to state 49
    EQUALS_EQUALS   shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 61

    (37) statement_while -> WHILE LPAREN expression . RPAREN statement
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    RPAREN          shift and go to state 87
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47
    LESS            shift and go to state 48
    GREATER         shift and go to state 49
    EQUALS_EQUALS   shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 62

    (38) statement_for -> FOR LPAREN assign_expression_opt . SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement

    SEMICOLON       shift and go to state 88


state 63

    (30) assign_expression_opt -> assign_expression .

    SEMICOLON       reduce using rule 30 (assign_expression_opt -> assign_expression .)
    RPAREN          reduce using rule 30 (assign_expression_opt -> assign_expression .)


state 64

    (31) assign_expression_opt -> empty .

    SEMICOLON       reduce using rule 31 (assign_expression_opt -> empty .)
    RPAREN          reduce using rule 31 (assign_expression_opt -> empty .)


state 65

    (29) assign_expression -> ID . EQUALS expression

    EQUALS          shift and go to state 89


state 66

    (39) block -> LBRACE statement_list RBRACE .

    FUNC            reduce using rule 39 (block -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 39 (block -> LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 39 (block -> LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 39 (block -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 39 (block -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 39 (block -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 39 (block -> LBRACE statement_list RBRACE .)
    FOR             reduce using rule 39 (block -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 39 (block -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 39 (block -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 39 (block -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 39 (block -> LBRACE statement_list RBRACE .)


state 67

    (5) param_list -> ID .

    RPAREN          reduce using rule 5 (param_list -> ID .)
    COMMA           reduce using rule 5 (param_list -> ID .)


state 68

    (1) statement -> FUNC ID LPAREN param_list . RPAREN block
    (19) statement_function -> FUNC ID LPAREN param_list . RPAREN block
    (4) param_list -> param_list . COMMA ID

    RPAREN          shift and go to state 90
    COMMA           shift and go to state 91


state 69

    (6) param_list -> empty .

    RPAREN          reduce using rule 6 (param_list -> empty .)
    COMMA           reduce using rule 6 (param_list -> empty .)


state 70

    (28) statement_assign -> ID EQUALS expression SEMICOLON .

    FUNC            reduce using rule 28 (statement_assign -> ID EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 28 (statement_assign -> ID EQUALS expression SEMICOLON .)
    BREAK           reduce using rule 28 (statement_assign -> ID EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 28 (statement_assign -> ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 28 (statement_assign -> ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 28 (statement_assign -> ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 28 (statement_assign -> ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 28 (statement_assign -> ID EQUALS expression SEMICOLON .)
    LBRACE          reduce using rule 28 (statement_assign -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 28 (statement_assign -> ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 28 (statement_assign -> ID EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 28 (statement_assign -> ID EQUALS expression SEMICOLON .)


state 71

    (22) statement_append -> ID PERIOD APPEND LPAREN . expression RPAREN SEMICOLON
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 92

state 72

    (40) expression -> expression PLUS expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    SEMICOLON       reduce using rule 40 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 40 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 40 (expression -> expression PLUS expression .)
    LESS            reduce using rule 40 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 40 (expression -> expression PLUS expression .)
    EQUALS_EQUALS   reduce using rule 40 (expression -> expression PLUS expression .)
    AND             reduce using rule 40 (expression -> expression PLUS expression .)
    OR              reduce using rule 40 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 40 (expression -> expression PLUS expression .)
    RSQUARE         reduce using rule 40 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 40 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! TIMES           [ reduce using rule 40 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 45 ]
  ! LESS            [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! EQUALS_EQUALS   [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 73

    (41) expression -> expression MINUS expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    SEMICOLON       reduce using rule 41 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 41 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 41 (expression -> expression MINUS expression .)
    LESS            reduce using rule 41 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 41 (expression -> expression MINUS expression .)
    EQUALS_EQUALS   reduce using rule 41 (expression -> expression MINUS expression .)
    AND             reduce using rule 41 (expression -> expression MINUS expression .)
    OR              reduce using rule 41 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 41 (expression -> expression MINUS expression .)
    RSQUARE         reduce using rule 41 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 41 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! TIMES           [ reduce using rule 41 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 45 ]
  ! LESS            [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! EQUALS_EQUALS   [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 74

    (42) expression -> expression TIMES expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    SEMICOLON       reduce using rule 42 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 42 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 42 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 42 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 42 (expression -> expression TIMES expression .)
    LESS            reduce using rule 42 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 42 (expression -> expression TIMES expression .)
    EQUALS_EQUALS   reduce using rule 42 (expression -> expression TIMES expression .)
    AND             reduce using rule 42 (expression -> expression TIMES expression .)
    OR              reduce using rule 42 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 42 (expression -> expression TIMES expression .)
    RSQUARE         reduce using rule 42 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 42 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 45 ]
  ! TIMES           [ shift and go to state 46 ]
  ! DIVIDE          [ shift and go to state 47 ]
  ! LESS            [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! EQUALS_EQUALS   [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 75

    (43) expression -> expression DIVIDE expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    SEMICOLON       reduce using rule 43 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 43 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 43 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 43 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 43 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 43 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 43 (expression -> expression DIVIDE expression .)
    EQUALS_EQUALS   reduce using rule 43 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 43 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 43 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 43 (expression -> expression DIVIDE expression .)
    RSQUARE         reduce using rule 43 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 43 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 45 ]
  ! TIMES           [ shift and go to state 46 ]
  ! DIVIDE          [ shift and go to state 47 ]
  ! LESS            [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! EQUALS_EQUALS   [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 76

    (44) expression -> expression LESS expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    SEMICOLON       reduce using rule 44 (expression -> expression LESS expression .)
    LESS            reduce using rule 44 (expression -> expression LESS expression .)
    GREATER         reduce using rule 44 (expression -> expression LESS expression .)
    EQUALS_EQUALS   reduce using rule 44 (expression -> expression LESS expression .)
    AND             reduce using rule 44 (expression -> expression LESS expression .)
    OR              reduce using rule 44 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 44 (expression -> expression LESS expression .)
    RSQUARE         reduce using rule 44 (expression -> expression LESS expression .)
    COMMA           reduce using rule 44 (expression -> expression LESS expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! PLUS            [ reduce using rule 44 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression LESS expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression LESS expression .) ]
  ! LESS            [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! EQUALS_EQUALS   [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 77

    (45) expression -> expression GREATER expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    SEMICOLON       reduce using rule 45 (expression -> expression GREATER expression .)
    LESS            reduce using rule 45 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 45 (expression -> expression GREATER expression .)
    EQUALS_EQUALS   reduce using rule 45 (expression -> expression GREATER expression .)
    AND             reduce using rule 45 (expression -> expression GREATER expression .)
    OR              reduce using rule 45 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 45 (expression -> expression GREATER expression .)
    RSQUARE         reduce using rule 45 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 45 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! PLUS            [ reduce using rule 45 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression GREATER expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression GREATER expression .) ]
  ! LESS            [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! EQUALS_EQUALS   [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 78

    (46) expression -> expression EQUALS_EQUALS expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for EQUALS_EQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 46 (expression -> expression EQUALS_EQUALS expression .)
    RPAREN          reduce using rule 46 (expression -> expression EQUALS_EQUALS expression .)
    RSQUARE         reduce using rule 46 (expression -> expression EQUALS_EQUALS expression .)
    COMMA           reduce using rule 46 (expression -> expression EQUALS_EQUALS expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47
    LESS            shift and go to state 48
    GREATER         shift and go to state 49
    EQUALS_EQUALS   shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52

  ! PLUS            [ reduce using rule 46 (expression -> expression EQUALS_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression EQUALS_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression EQUALS_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression EQUALS_EQUALS expression .) ]
  ! LESS            [ reduce using rule 46 (expression -> expression EQUALS_EQUALS expression .) ]
  ! GREATER         [ reduce using rule 46 (expression -> expression EQUALS_EQUALS expression .) ]
  ! EQUALS_EQUALS   [ reduce using rule 46 (expression -> expression EQUALS_EQUALS expression .) ]
  ! AND             [ reduce using rule 46 (expression -> expression EQUALS_EQUALS expression .) ]
  ! OR              [ reduce using rule 46 (expression -> expression EQUALS_EQUALS expression .) ]


state 79

    (47) expression -> expression AND expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    SEMICOLON       reduce using rule 47 (expression -> expression AND expression .)
    EQUALS_EQUALS   reduce using rule 47 (expression -> expression AND expression .)
    AND             reduce using rule 47 (expression -> expression AND expression .)
    OR              reduce using rule 47 (expression -> expression AND expression .)
    RPAREN          reduce using rule 47 (expression -> expression AND expression .)
    RSQUARE         reduce using rule 47 (expression -> expression AND expression .)
    COMMA           reduce using rule 47 (expression -> expression AND expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47
    LESS            shift and go to state 48
    GREATER         shift and go to state 49

  ! PLUS            [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! EQUALS_EQUALS   [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 80

    (48) expression -> expression OR expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    SEMICOLON       reduce using rule 48 (expression -> expression OR expression .)
    EQUALS_EQUALS   reduce using rule 48 (expression -> expression OR expression .)
    OR              reduce using rule 48 (expression -> expression OR expression .)
    RPAREN          reduce using rule 48 (expression -> expression OR expression .)
    RSQUARE         reduce using rule 48 (expression -> expression OR expression .)
    COMMA           reduce using rule 48 (expression -> expression OR expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47
    LESS            shift and go to state 48
    GREATER         shift and go to state 49
    AND             shift and go to state 51

  ! PLUS            [ reduce using rule 48 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 48 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 48 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 48 (expression -> expression OR expression .) ]
  ! EQUALS_EQUALS   [ shift and go to state 50 ]
  ! OR              [ shift and go to state 52 ]


state 81

    (2) expression -> ID LPAREN expression_list . RPAREN
    (24) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 93
    COMMA           shift and go to state 84


state 82

    (50) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    EQUALS_EQUALS   reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    RSQUARE         reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 50 (expression -> LPAREN expression RPAREN .)


state 83

    (26) expression -> LSQUARE expression_list RSQUARE .

    SEMICOLON       reduce using rule 26 (expression -> LSQUARE expression_list RSQUARE .)
    PLUS            reduce using rule 26 (expression -> LSQUARE expression_list RSQUARE .)
    MINUS           reduce using rule 26 (expression -> LSQUARE expression_list RSQUARE .)
    TIMES           reduce using rule 26 (expression -> LSQUARE expression_list RSQUARE .)
    DIVIDE          reduce using rule 26 (expression -> LSQUARE expression_list RSQUARE .)
    LESS            reduce using rule 26 (expression -> LSQUARE expression_list RSQUARE .)
    GREATER         reduce using rule 26 (expression -> LSQUARE expression_list RSQUARE .)
    EQUALS_EQUALS   reduce using rule 26 (expression -> LSQUARE expression_list RSQUARE .)
    AND             reduce using rule 26 (expression -> LSQUARE expression_list RSQUARE .)
    OR              reduce using rule 26 (expression -> LSQUARE expression_list RSQUARE .)
    RPAREN          reduce using rule 26 (expression -> LSQUARE expression_list RSQUARE .)
    RSQUARE         reduce using rule 26 (expression -> LSQUARE expression_list RSQUARE .)
    COMMA           reduce using rule 26 (expression -> LSQUARE expression_list RSQUARE .)


state 84

    (24) expression_list -> expression_list COMMA . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 94

state 85

    (21) statement_print -> PRINT LPAREN expression_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 95


state 86

    (35) statement_if -> IF LPAREN expression RPAREN . statement
    (36) statement_if -> IF LPAREN expression RPAREN . statement ELSE statement
    (1) statement -> . FUNC ID LPAREN param_list RPAREN block
    (3) statement -> . RETURN expression SEMICOLON
    (10) statement -> . statement_function
    (11) statement -> . statement_return
    (12) statement -> . statement_print
    (13) statement -> . statement_assign
    (14) statement -> . statement_if
    (15) statement -> . statement_while
    (16) statement -> . statement_for
    (17) statement -> . statement_append
    (18) statement -> . block
    (23) statement -> . BREAK SEMICOLON
    (19) statement_function -> . FUNC ID LPAREN param_list RPAREN block
    (20) statement_return -> . RETURN expression SEMICOLON
    (21) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (28) statement_assign -> . ID EQUALS expression SEMICOLON
    (35) statement_if -> . IF LPAREN expression RPAREN statement
    (36) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (37) statement_while -> . WHILE LPAREN expression RPAREN statement
    (38) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (22) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (39) block -> . LBRACE statement_list RBRACE

    FUNC            shift and go to state 4
    RETURN          shift and go to state 7
    BREAK           shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 5
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    LBRACE          shift and go to state 21

    statement                      shift and go to state 96
    block                          shift and go to state 6
    statement_function             shift and go to state 8
    statement_return               shift and go to state 9
    statement_print                shift and go to state 10
    statement_assign               shift and go to state 11
    statement_if                   shift and go to state 12
    statement_while                shift and go to state 13
    statement_for                  shift and go to state 14
    statement_append               shift and go to state 15

state 87

    (37) statement_while -> WHILE LPAREN expression RPAREN . statement
    (1) statement -> . FUNC ID LPAREN param_list RPAREN block
    (3) statement -> . RETURN expression SEMICOLON
    (10) statement -> . statement_function
    (11) statement -> . statement_return
    (12) statement -> . statement_print
    (13) statement -> . statement_assign
    (14) statement -> . statement_if
    (15) statement -> . statement_while
    (16) statement -> . statement_for
    (17) statement -> . statement_append
    (18) statement -> . block
    (23) statement -> . BREAK SEMICOLON
    (19) statement_function -> . FUNC ID LPAREN param_list RPAREN block
    (20) statement_return -> . RETURN expression SEMICOLON
    (21) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (28) statement_assign -> . ID EQUALS expression SEMICOLON
    (35) statement_if -> . IF LPAREN expression RPAREN statement
    (36) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (37) statement_while -> . WHILE LPAREN expression RPAREN statement
    (38) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (22) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (39) block -> . LBRACE statement_list RBRACE

    FUNC            shift and go to state 4
    RETURN          shift and go to state 7
    BREAK           shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 5
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    LBRACE          shift and go to state 21

    statement                      shift and go to state 97
    block                          shift and go to state 6
    statement_function             shift and go to state 8
    statement_return               shift and go to state 9
    statement_print                shift and go to state 10
    statement_assign               shift and go to state 11
    statement_if                   shift and go to state 12
    statement_while                shift and go to state 13
    statement_for                  shift and go to state 14
    statement_append               shift and go to state 15

state 88

    (38) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON . expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (32) expression_opt -> . expression
    (33) expression_opt -> . empty
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID
    (34) empty -> .

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33
    SEMICOLON       reduce using rule 34 (empty -> .)

    expression_opt                 shift and go to state 98
    expression                     shift and go to state 99
    empty                          shift and go to state 100

state 89

    (29) assign_expression -> ID EQUALS . expression
    (2) expression -> . ID LPAREN expression_list RPAREN
    (26) expression -> . LSQUARE expression_list RSQUARE
    (27) expression -> . LBRACE RBRACE
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression TIMES expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression GREATER expression
    (46) expression -> . expression EQUALS_EQUALS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . NOT expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . STRING
    (53) expression -> . ID

    ID              shift and go to state 27
    LSQUARE         shift and go to state 29
    LBRACE          shift and go to state 30
    NOT             shift and go to state 31
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 101

state 90

    (1) statement -> FUNC ID LPAREN param_list RPAREN . block
    (19) statement_function -> FUNC ID LPAREN param_list RPAREN . block
    (39) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 21

    block                          shift and go to state 102

state 91

    (4) param_list -> param_list COMMA . ID

    ID              shift and go to state 103


state 92

    (22) statement_append -> ID PERIOD APPEND LPAREN expression . RPAREN SEMICOLON
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    RPAREN          shift and go to state 104
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47
    LESS            shift and go to state 48
    GREATER         shift and go to state 49
    EQUALS_EQUALS   shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 93

    (2) expression -> ID LPAREN expression_list RPAREN .

    SEMICOLON       reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    PLUS            reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    TIMES           reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    LESS            reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    GREATER         reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    EQUALS_EQUALS   reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    AND             reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    OR              reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    RSQUARE         reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 2 (expression -> ID LPAREN expression_list RPAREN .)


state 94

    (24) expression_list -> expression_list COMMA expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    RSQUARE         reduce using rule 24 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 24 (expression_list -> expression_list COMMA expression .)
    RPAREN          reduce using rule 24 (expression_list -> expression_list COMMA expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47
    LESS            shift and go to state 48
    GREATER         shift and go to state 49
    EQUALS_EQUALS   shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 95

    (21) statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .

    FUNC            reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    BREAK           reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    PRINT           reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    ID              reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    IF              reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    FOR             reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    LBRACE          reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    $end            reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    RBRACE          reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    ELSE            reduce using rule 21 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)


state 96

    (35) statement_if -> IF LPAREN expression RPAREN statement .
    (36) statement_if -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    FUNC            reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement .)
    PRINT           reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 105

  ! ELSE            [ reduce using rule 35 (statement_if -> IF LPAREN expression RPAREN statement .) ]


state 97

    (37) statement_while -> WHILE LPAREN expression RPAREN statement .

    FUNC            reduce using rule 37 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 37 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 37 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    PRINT           reduce using rule 37 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 37 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 37 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 37 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 37 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 37 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 37 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 37 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 37 (statement_while -> WHILE LPAREN expression RPAREN statement .)


state 98

    (38) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt . SEMICOLON assign_expression_opt RPAREN statement

    SEMICOLON       shift and go to state 106


state 99

    (32) expression_opt -> expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    SEMICOLON       reduce using rule 32 (expression_opt -> expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47
    LESS            shift and go to state 48
    GREATER         shift and go to state 49
    EQUALS_EQUALS   shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 100

    (33) expression_opt -> empty .

    SEMICOLON       reduce using rule 33 (expression_opt -> empty .)


state 101

    (29) assign_expression -> ID EQUALS expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . TIMES expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . GREATER expression
    (46) expression -> expression . EQUALS_EQUALS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression

    SEMICOLON       reduce using rule 29 (assign_expression -> ID EQUALS expression .)
    RPAREN          reduce using rule 29 (assign_expression -> ID EQUALS expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47
    LESS            shift and go to state 48
    GREATER         shift and go to state 49
    EQUALS_EQUALS   shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52


state 102

    (1) statement -> FUNC ID LPAREN param_list RPAREN block .
    (19) statement_function -> FUNC ID LPAREN param_list RPAREN block .

  ! reduce/reduce conflict for FUNC resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for RETURN resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for BREAK resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for PRINT resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for ID resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for IF resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for WHILE resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for FOR resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for LBRACE resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for $end resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for RBRACE resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
  ! reduce/reduce conflict for ELSE resolved using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    FUNC            reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    RETURN          reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    BREAK           reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    PRINT           reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    ID              reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    IF              reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    WHILE           reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    FOR             reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    LBRACE          reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    $end            reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    RBRACE          reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)
    ELSE            reduce using rule 1 (statement -> FUNC ID LPAREN param_list RPAREN block .)

  ! FUNC            [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! RETURN          [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! BREAK           [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! PRINT           [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! ID              [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! IF              [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! WHILE           [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! FOR             [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! LBRACE          [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! $end            [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! RBRACE          [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]
  ! ELSE            [ reduce using rule 19 (statement_function -> FUNC ID LPAREN param_list RPAREN block .) ]


state 103

    (4) param_list -> param_list COMMA ID .

    RPAREN          reduce using rule 4 (param_list -> param_list COMMA ID .)
    COMMA           reduce using rule 4 (param_list -> param_list COMMA ID .)


state 104

    (22) statement_append -> ID PERIOD APPEND LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 107


state 105

    (36) statement_if -> IF LPAREN expression RPAREN statement ELSE . statement
    (1) statement -> . FUNC ID LPAREN param_list RPAREN block
    (3) statement -> . RETURN expression SEMICOLON
    (10) statement -> . statement_function
    (11) statement -> . statement_return
    (12) statement -> . statement_print
    (13) statement -> . statement_assign
    (14) statement -> . statement_if
    (15) statement -> . statement_while
    (16) statement -> . statement_for
    (17) statement -> . statement_append
    (18) statement -> . block
    (23) statement -> . BREAK SEMICOLON
    (19) statement_function -> . FUNC ID LPAREN param_list RPAREN block
    (20) statement_return -> . RETURN expression SEMICOLON
    (21) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (28) statement_assign -> . ID EQUALS expression SEMICOLON
    (35) statement_if -> . IF LPAREN expression RPAREN statement
    (36) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (37) statement_while -> . WHILE LPAREN expression RPAREN statement
    (38) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (22) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (39) block -> . LBRACE statement_list RBRACE

    FUNC            shift and go to state 4
    RETURN          shift and go to state 7
    BREAK           shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 5
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    LBRACE          shift and go to state 21

    statement                      shift and go to state 108
    block                          shift and go to state 6
    statement_function             shift and go to state 8
    statement_return               shift and go to state 9
    statement_print                shift and go to state 10
    statement_assign               shift and go to state 11
    statement_if                   shift and go to state 12
    statement_while                shift and go to state 13
    statement_for                  shift and go to state 14
    statement_append               shift and go to state 15

state 106

    (38) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON . assign_expression_opt RPAREN statement
    (30) assign_expression_opt -> . assign_expression
    (31) assign_expression_opt -> . empty
    (29) assign_expression -> . ID EQUALS expression
    (34) empty -> .

    ID              shift and go to state 65
    RPAREN          reduce using rule 34 (empty -> .)

    assign_expression_opt          shift and go to state 109
    assign_expression              shift and go to state 63
    empty                          shift and go to state 64

state 107

    (22) statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .

    FUNC            reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 22 (statement_append -> ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON .)


state 108

    (36) statement_if -> IF LPAREN expression RPAREN statement ELSE statement .

    FUNC            reduce using rule 36 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 36 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    BREAK           reduce using rule 36 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    PRINT           reduce using rule 36 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 36 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 36 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 36 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 36 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 36 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    $end            reduce using rule 36 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 36 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 36 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)


state 109

    (38) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt . RPAREN statement

    RPAREN          shift and go to state 110


state 110

    (38) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN . statement
    (1) statement -> . FUNC ID LPAREN param_list RPAREN block
    (3) statement -> . RETURN expression SEMICOLON
    (10) statement -> . statement_function
    (11) statement -> . statement_return
    (12) statement -> . statement_print
    (13) statement -> . statement_assign
    (14) statement -> . statement_if
    (15) statement -> . statement_while
    (16) statement -> . statement_for
    (17) statement -> . statement_append
    (18) statement -> . block
    (23) statement -> . BREAK SEMICOLON
    (19) statement_function -> . FUNC ID LPAREN param_list RPAREN block
    (20) statement_return -> . RETURN expression SEMICOLON
    (21) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (28) statement_assign -> . ID EQUALS expression SEMICOLON
    (35) statement_if -> . IF LPAREN expression RPAREN statement
    (36) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (37) statement_while -> . WHILE LPAREN expression RPAREN statement
    (38) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (22) statement_append -> . ID PERIOD APPEND LPAREN expression RPAREN SEMICOLON
    (39) block -> . LBRACE statement_list RBRACE

    FUNC            shift and go to state 4
    RETURN          shift and go to state 7
    BREAK           shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 5
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    LBRACE          shift and go to state 21

    statement                      shift and go to state 111
    block                          shift and go to state 6
    statement_function             shift and go to state 8
    statement_return               shift and go to state 9
    statement_print                shift and go to state 10
    statement_assign               shift and go to state 11
    statement_if                   shift and go to state 12
    statement_while                shift and go to state 13
    statement_for                  shift and go to state 14
    statement_append               shift and go to state 15

state 111

    (38) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .

    FUNC            reduce using rule 38 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    RETURN          reduce using rule 38 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    BREAK           reduce using rule 38 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    PRINT           reduce using rule 38 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    ID              reduce using rule 38 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    IF              reduce using rule 38 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    WHILE           reduce using rule 38 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    FOR             reduce using rule 38 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    LBRACE          reduce using rule 38 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    $end            reduce using rule 38 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    RBRACE          reduce using rule 38 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    ELSE            reduce using rule 38 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 78 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 78 resolved as shift
WARNING: shift/reduce conflict for LESS in state 78 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 78 resolved as shift
WARNING: shift/reduce conflict for EQUALS_EQUALS in state 78 resolved as shift
WARNING: shift/reduce conflict for AND in state 78 resolved as shift
WARNING: shift/reduce conflict for OR in state 78 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 96 resolved as shift
WARNING: reduce/reduce conflict in state 43 resolved using rule (statement -> RETURN expression SEMICOLON)
WARNING: rejected rule (statement_return -> RETURN expression SEMICOLON) in state 43
WARNING: reduce/reduce conflict in state 102 resolved using rule (statement -> FUNC ID LPAREN param_list RPAREN block)
WARNING: rejected rule (statement_function -> FUNC ID LPAREN param_list RPAREN block) in state 102
WARNING: Rule (statement_return -> RETURN expression SEMICOLON) is never reduced
WARNING: Rule (statement_function -> FUNC ID LPAREN param_list RPAREN block) is never reduced
